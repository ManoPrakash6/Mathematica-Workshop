(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    291129,       5574]
NotebookOptionsPosition[    282590,       5418]
NotebookOutlinePosition[    283015,       5435]
CellTagsIndexPosition[    282972,       5432]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "34"]], "Input",
 CellChangeTimes->{{3.8373040071687503`*^9, 3.8373040109456577`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3b96a4d2-bfb3-4d3b-9a14-5b243e025c54"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "34"]], "Output",
 CellChangeTimes->{3.8373040135749288`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0c69a83a-1018-47b1-9b96-2069f48bbee8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"6", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8373040364934855`*^9, 3.83730404131388*^9}, {
  3.8373040955966797`*^9, 3.837304096969452*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9005f533-da3d-4544-a98f-548020699bb7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zaEjUQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$11240#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 6 Pi}, {-0.9999990687548602, 0.9999987329187721}}, {{
     0, 18.84955592153876}, {-0.9999990687548602, 0.9999987329187721}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8373041004821067`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c2b8f06b-ab63-4b96-906e-98f79a95bb28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], "  ", "-", "x", " ", "+", " ", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.837306257949892*^9, 3.837306303986039*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5c7ae0bc-4841-4b57-b2f7-ef14e1e1f362"],

Cell[BoxData[
 RowBox[{"1", "-", "x", "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{{3.8373062916905766`*^9, 3.837306305921059*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"6449d0a9-9052-4f3b-82c5-99968ee2155b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica Workshop @ SVNIT", "Title",
 CellChangeTimes->{{3.837318104002654*^9, 3.8373181366156497`*^9}, {
  3.837318176537881*^9, 
  3.837318182190178*^9}},ExpressionUUID->"e32fb987-72c9-45ee-9abc-\
c2fe9b3818c4"],

Cell["Mano Prakash P (Student)", "Text",
 CellChangeTimes->{{3.8373181454108243`*^9, 
  3.8373181864239335`*^9}},ExpressionUUID->"af953c3e-1afb-482d-b59c-\
0227fb6db3b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"45", " ", "+", " ", 
   RowBox[{"63", "x"}], " ", "+", " ", 
   RowBox[{"32", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"16", 
    RowBox[{"x", "^", "3"}]}], "+", 
   RowBox[{"3", 
    RowBox[{"x", "^", "4"}]}], "+", 
   RowBox[{"x", "^", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.837318211325672*^9, 3.837318242397745*^9}, {
   3.8373185887304635`*^9, 3.8373186146317425`*^9}, 3.837318647830635*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"1cc14499-1859-471e-ae64-02960876f165"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"9", "+", 
    SuperscriptBox["x", "2"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.837318604177931*^9, 3.8373186157606297`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"57c88fe7-1c70-47f3-895c-5540a8438b74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", " ", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8373186544471493`*^9, 3.837318665463751*^9}, {
  3.8373186978324823`*^9, 
  3.837318738247967*^9}},ExpressionUUID->"b2237f84-96d0-4e54-900e-\
11ed2e44951c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"9", "+", 
    SuperscriptBox["x", "2"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.83731870288799*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"065cfcdd-1336-4fcf-bc23-4367a807b8c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", " ", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8373187405794706`*^9, 3.8373187458525577`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"8a1d10fb-8f60-4cc7-bd80-0482a224a28f"],

Cell[BoxData[
 RowBox[{"45", "+", 
  RowBox[{"63", " ", "x"}], "+", 
  RowBox[{"32", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"16", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  SuperscriptBox["x", "5"]}]], "Output",
 CellChangeTimes->{3.8373187480139513`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"435bfceb-4c85-49d4-80be-bf4c718422e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]], "Input",
 CellChangeTimes->{{3.8373188186321115`*^9, 3.837318822530135*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6f09c761-5047-4168-b162-655a2f74be13"],

Cell[BoxData[
 RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "Output",
 CellChangeTimes->{3.8373188250719857`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"22c1ed0d-05e3-4276-a49e-2e17ce449d2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", " ", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373188412013617`*^9, 3.83731885891364*^9}, {
  3.8373189297861595`*^9, 3.8373189327021303`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"21407356-d0f4-49d3-a1a2-badea53736a9"],

Cell[BoxData["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
998628034825342117067982148086513282306647093844609550582231725359408128481117\
45028410270193852110555964462294895493038196442881097567`200."], "Output",
 CellChangeTimes->{3.837318860935734*^9, 3.837318933975563*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"d64ec7da-561f-4b56-8900-dbf9d7952041"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"GoldenRatio", ",", " ", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373189400958757`*^9, 3.8373189513816533`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f922e6da-8bc4-4bef-97f3-ab1d18cfbbe2"],

Cell[BoxData["1.\
618033988749894848204586834365638117720309179805762862135448622705260462818902\
449707207204189391137484754088075386891752126633862223536931793180060766726354\
43338908659593958290563832266131992829026788067520876689`200."], "Output",
 CellChangeTimes->{3.8373189530824842`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8c1c3204-0019-468c-a9bc-ac0686c6cb91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "3", "]"}], ",", " ", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.837318959555545*^9, 3.837319010358414*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"dde98b32-6d46-483b-bc87-8e9404346a3c"],

Cell[BoxData["1.\
732050807568877293527446341505872366942805253810380628055806979451933016908800\
037081146186757248575675626141415406703029969945094998952478811655512094373648\
5280932319023055820679748201010846749232650153123432669`200."], "Output",
 CellChangeTimes->{3.8373190116591997`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"fcfffdfd-7fb1-4156-a6a0-8fed26d93992"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "123456789", "]"}]], "Input",
 CellChangeTimes->{{3.837319288908125*^9, 3.8373193007190185`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b13310be-6929-4bc1-8183-6dae34db532c"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8373193032116613`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ded444af-9495-401a-a891-5dbd08a4842d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "111119", "]"}]], "Input",
 CellChangeTimes->{{3.837319311762657*^9, 3.8373193232637887`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"074e3c62-843d-444c-8dff-5fbd6fe633cb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.83731932429735*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"519fb34d-98d4-4ea2-a263-1d9e480b6b35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "1000001", "]"}]], "Input",
 CellChangeTimes->{{3.837319332069844*^9, 3.837319349112073*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d48f6c7e-3af5-4b74-9b50-d4cf5d93bf2e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.837319350090794*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"411c358d-d246-4651-bc8f-094f30e1e02c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"10", " ", "*", " ", 
    RowBox[{"Sqrt", " ", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"10.8", " ", "*", " ", 
         RowBox[{"10", "^", "3"}]}], ")"}], "/", "300"}], ")"}], "]"}]}], 
   ")"}], "^", "3"}]], "Input",
 CellChangeTimes->{{3.837319403619463*^9, 3.837319502063923*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"76d8e272-9b64-4414-b4c7-eb390a056c97"],

Cell[BoxData["216000.`"], "Output",
 CellChangeTimes->{3.837319503468975*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"3ce5c4e6-6edf-4550-aafc-66fc5b3e82a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", "x"}], "]"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373196989107513`*^9, 3.837319709583827*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"83b27775-6d08-4206-b751-b66de7a0735c"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.837319711384894*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"91b465ae-c446-4631-a097-756d2c21375a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"x", "^", "2"}], " ", "+", " ", 
     RowBox[{"x", "^", "n"}]}], ")"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373197503715267`*^9, 3.837319777545596*^9}, {
  3.8373198547221985`*^9, 
  3.8373198591753826`*^9}},ExpressionUUID->"d75723b2-62de-4279-bcca-\
c5d0a85bf40c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "+", 
  RowBox[{"n", " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}]}]], "Input",
 CellChangeTimes->{{3.8373198713696613`*^9, 
  3.837319877915327*^9}},ExpressionUUID->"3df010b7-f0d6-42a4-8a08-\
6bf9d3c1e9ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", "x", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", "+", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"x", "*", "y"}], "]"}]}], ")"}]}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8373198098366127`*^9, 3.8373198129944916`*^9}, {
  3.83731984344221*^9, 3.8373199287195897`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4b7f3073-894b-47cc-8c78-1c6e95eaaff2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"y", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"x", " ", "y"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"x", " ", "y"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8373198886995087`*^9, 3.8373199301873713`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"f964f8b1-477b-4cc0-a47f-2c6e4b9ee4f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", "+", " ", 
      RowBox[{"y", "^", "2"}], " ", "+", " ", 
      RowBox[{"z", "^", "2"}]}], ")"}], 
    RowBox[{"Exp", "[", "z", "]"}]}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373199603059044`*^9, 3.837319978367626*^9}, {
  3.8373202632196836`*^9, 3.8373202712277994`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"f4523aff-2e09-433f-a2e1-e51dfaeb79ef"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[ExponentialE]", "z"], " ", "x"}]], "Output",
 CellChangeTimes->{3.837320272772586*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"3ded9d9c-896e-45d9-9fa0-43fa5463aa20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"1", "/", "x"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373204279083333`*^9, 3.837320435965819*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d542087b-3998-44ee-989c-2eba57aa5b6a"],

Cell[BoxData[
 RowBox[{"Log", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.8373204375255933`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"42ae8d0f-e8ca-4eda-bff9-0f592784e81d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "*", 
     RowBox[{"x", "^", "2"}]}], "  ", "+", " ", 
    RowBox[{"b", "*", 
     RowBox[{"y", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"2", "x", "*", "y"}]}], ",", " ", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.837320563886633*^9, 3.837320655859578*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"64e0eeb9-1540-4440-ab3e-261ff4f58d99"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "3"], " ", "a", " ", 
   SuperscriptBox["x", "3"], " ", "y"}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "2"]}], "2"], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", "b", " ", "x", " ", 
   SuperscriptBox["y", "3"]}]}]], "Output",
 CellChangeTimes->{{3.837320603488858*^9, 3.8373206573343625`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"6f2a308a-eb5b-41cb-bd99-5cfdc791aae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"x", "^", "2"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{
       RowBox[{"-", "1"}], " ", "*", " ", "Pi"}], ",", " ", "Pi"}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.837320668227518*^9, 3.837320672976017*^9}, {
  3.8373207205334225`*^9, 3.8373207562956862`*^9}, {3.8373208057843413`*^9, 
  3.8373208430421624`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"26f6cc72-b47b-42a5-92b6-3ce85d4af6be"],

Cell[BoxData["4.655057832388281`"], "Output",
 CellChangeTimes->{{3.837320820015984*^9, 3.8373208444854307`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"f16a74d2-9e93-4c25-8b24-25a9a39da124"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"88b0d7b5-4c72-4ce3-b068-b18137962cbf"],

Cell[BoxData["1.2470560582440042`"], "Output",
 CellChangeTimes->{3.83732071108045*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"adb87339-cc82-402c-8ca5-64dee89bdff2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "^", "n"}], ")"}], "*", " ", 
     RowBox[{"Exp", "[", "x", "]"}]}], " ", "+", " ", 
    RowBox[{"y", "*", 
     RowBox[{"Tan", "[", "x", "]"}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373210054056964`*^9, 3.8373210083368535`*^9}, {
  3.837321042995455*^9, 3.8373210930350513`*^9}, {3.837321168929097*^9, 
  3.837321178049667*^9}, {3.83732122782515*^9, 3.8373212364495554`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"5b3fd0a6-994e-4c5d-bb73-60a223d4a9e5"],

Cell[BoxData[
 TemplateBox[{
  "FindMaximum", "nrnum", 
   "\"The function value \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"2.718281828459045`\\\"}], \\\"-\\\", RowBox[{\\\"1.5574077246549023`\\\", \
\\\" \\\", \\\"y\\\"}]}]\\) is not a real number at \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"1.`\\\", \\\"}\\\"}]\\).\"", 2, 34, 12, 
   34177604959145690614, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8373210952164154`*^9, 3.837321179629738*^9, 
  3.837321242032874*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"c20843e3-438c-4bc8-8b94-fcde164313eb"],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "n"], " ", 
     RowBox[{"Exp", "[", "x", "]"}]}], "+", 
    RowBox[{"y", " ", 
     RowBox[{"Tan", "[", "x", "]"}]}]}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.837321095312625*^9, 3.8373211797467628`*^9, 
  3.8373212421260815`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c9e60141-c235-42bb-8d46-44e60f0c1d8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "^", "n"}], ")"}], "*", " ", 
     RowBox[{"Exp", "[", "x", "]"}]}], " ", "+", " ", 
    RowBox[{"y", "*", 
     RowBox[{"Tan", "[", "x", "]"}]}]}], ",", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.837321286665403*^9, 3.8373212944939623`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f5c8b286-5046-4397-ad1f-24648feec1d8"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Sec", "[", "x", "]"}], "2"]], "Output",
 CellChangeTimes->{3.8373212970734406`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"8a80c595-f07b-47e2-b9b7-cb131d58bb19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "5"}]}], " ", "+", " ", 
     RowBox[{"5", "*", 
      RowBox[{"x", "^", "3"}]}], " ", "+", " ", 
     RowBox[{"b", "*", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
     RowBox[{"10", "*", "x"}], " ", "+", " ", "1"}], " ", "==", " ", "0"}], 
   " ", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8373213827154474`*^9, 3.8373213846546907`*^9}, {
  3.8373214421553683`*^9, 3.8373214472702465`*^9}, {3.8373214923000035`*^9, 
  3.8373215404635916`*^9}, {3.8373215709891434`*^9, 3.8373216007376566`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"6edeb7dd-1a7f-4aae-9abc-13b321bcfe56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"10.`", " ", "#1"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"5.`", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"10.`", " ", "#1"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"5.`", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "2"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"10.`", " ", "#1"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"5.`", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "3"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"10.`", " ", "#1"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"5.`", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "4"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"10.`", " ", "#1"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"5.`", " ", 
          SuperscriptBox["#1", "3"]}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "5"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8373215804420805`*^9, 3.8373216027973485`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"0d797a9a-f104-4812-9d30-92398a739999"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8373218145506053`*^9, 
  3.8373218155909176`*^9}},ExpressionUUID->"ef7ca194-edfa-4d18-885c-\
75d5e94df1c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "^", "n"}], ")"}], "*", " ", 
     RowBox[{"Exp", "[", "x", "]"}]}], " ", "+", " ", 
    RowBox[{"y", "*", 
     RowBox[{"Tan", "[", "x", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], " ", "==", " ", 
     "0"}], " ", ",", " ", "x", ",", "y"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8373217265657687`*^9, 3.8373217613357844`*^9}, {
   3.837321821547048*^9, 3.837321922634856*^9}, {3.8373219678373713`*^9, 
   3.8373219740954022`*^9}, {3.8373220089994116`*^9, 
   3.8373220102074385`*^9}, {3.837322066129607*^9, 3.8373220746258726`*^9}, {
   3.837323330387574*^9, 3.837323377569601*^9}, 3.837323410363207*^9, {
   3.8373235391898303`*^9, 3.83732354406046*^9}, {3.8373235772162995`*^9, 
   3.8373236555573525`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"913abb38-ef7e-450c-a4d4-286f5b377bfe"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "sntxb", 
   "\"Expression cannot begin with \\\"\\!\\(\\*RowBox[{RowBox[{\\\"[\\\", \
RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"x\\\", \\\",\\\", \
\\\"y\\\"}], \\\"]\\\"}], \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"==\\\", \\\
\"0\\\"}]\\)\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\"\\\"}]\\).\"", 2, 73, 40,
    34177604959145690614, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8373236452655106`*^9},
 CellLabel->
  "During evaluation of \
In[72]:=",ExpressionUUID->"d0a479f5-5be8-4e31-a535-b527f784be04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", "x", "]"}], " ", "+", " ", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], " ", "==", " ", "0"}], 
   ",", " ", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837323679493513*^9, 3.8373236863043547`*^9}, {
  3.837323752890319*^9, 3.8373237761215515`*^9}, {3.837323889436737*^9, 
  3.8373239858107595`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[94]:=",ExpressionUUID->"95240714-857b-4faa-a4b6-d435205fa02d"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "sntxb", 
   "\"Expression cannot begin with \\\"\\!\\(\\*RowBox[{RowBox[{\\\"[\\\", \
RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}], \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"==\\\", \\\"0\\\"}]\\)\\\"\\!\\(\\*RowBox[{\\\"\
\\\\\\\"\\\\\\\"\\\"}]\\).\"", 2, 95, 42, 34177604959145690614, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8373239964144173`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"fcc3c85b-d479-460a-9627-b26f2c639353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "-", " ", "1"}], "==", "0"}], ",", " ", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.837322141051518*^9, 3.8373221582331553`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"a6c44ca1-1a5c-469e-871c-a332ec7725ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"2", "/", "3"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.837322159114916*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"13ad4340-ef63-412e-9594-c9539e86647d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "3"}], " ", "+", " ", 
      RowBox[{"y", "^", "3"}], " ", "+", " ", 
      RowBox[{"3", "*", "x", "*", "y"}]}], " ", "==", "10"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", "+", " ", 
      RowBox[{"10", "*", "y"}]}], "==", "4"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8373222123338614`*^9, 3.837322246222482*^9}, {
  3.8373222886762314`*^9, 3.8373222909674206`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e5805bcf-4869-42bd-8814-1a17442b4a0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"2.19\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"]]}, 
            "RowDefault"], ShowStringCharacters -> False], 
          2.19178175771606609245623076276388019323`15.954589770191003, 
          Editable -> False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"9936", "-", 
                  RowBox[{"1200", " ", "#1"}], "+", 
                  RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                  RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], 
          Short[#, 7]& ], 2.191781757716066},
        "NumericalApproximation"],
       Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 1, 0]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SuperscriptBox[
          InterpretationBox[
           TemplateBox[{"Root", 
             InterpretationBox[
              StyleBox[
               TemplateBox[{"\"2.19\"", 
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEExpressions", "NumericalApproximationElider"]]}, 
                "RowDefault"], ShowStringCharacters -> False], 
              2.19178175771606609245623076276388019323`15.954589770191003, 
              Editable -> False], 
             TagBox[
              RowBox[{"Root", "[", 
                RowBox[{
                  RowBox[{
                    RowBox[{"9936", "-", 
                    RowBox[{"1200", " ", "#1"}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    SuperscriptBox["#1", "6"]}], "&"}], ",", "1"}], "]"}], 
              Short[#, 7]& ], 2.191781757716066},
            "NumericalApproximation"],
           Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 1, 0]], 
          "2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         InterpretationBox[
          StyleBox[
           TemplateBox[{"\"9.31\"", 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "FEExpressions", "NumericalApproximationElider"]]}, 
            "RowDefault"], ShowStringCharacters -> False], 
          9.31462850954816445891992771066725254059`15.954589770191003, 
          Editable -> False], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"9936", "-", 
                  RowBox[{"1200", " ", "#1"}], "+", 
                  RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                  RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], 
          Short[#, 7]& ], 9.314628509548164},
        "NumericalApproximation"],
       Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 2, 0]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SuperscriptBox[
          InterpretationBox[
           TemplateBox[{"Root", 
             InterpretationBox[
              StyleBox[
               TemplateBox[{"\"9.31\"", 
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEExpressions", "NumericalApproximationElider"]]}, 
                "RowDefault"], ShowStringCharacters -> False], 
              9.31462850954816445891992771066725254059`15.954589770191003, 
              Editable -> False], 
             TagBox[
              RowBox[{"Root", "[", 
                RowBox[{
                  RowBox[{
                    RowBox[{"9936", "-", 
                    RowBox[{"1200", " ", "#1"}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    SuperscriptBox["#1", "6"]}], "&"}], ",", "2"}], "]"}], 
              Short[#, 7]& ], 9.314628509548164},
            "NumericalApproximation"],
           Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 2, 0]], 
          "2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         RowBox[{
           InterpretationBox[
            StyleBox[
             TemplateBox[{"\"-4.71\"", 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEExpressions", "NumericalApproximationElider"]]}, 
              "RowDefault"], ShowStringCharacters -> 
             False], -4.71425081207772489477747512864880263805`15.\
84450342472155, Editable -> False], "-", 
           RowBox[{
             InterpretationBox[
              StyleBox[
               TemplateBox[{"\"7.18\"", 
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEExpressions", "NumericalApproximationElider"]]}, 
                "RowDefault"], ShowStringCharacters -> False], 
              7.18129719184213577420905494363978505135`16.0272936401732, 
              Editable -> False], " ", "\[ImaginaryI]"}]}], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"9936", "-", 
                  RowBox[{"1200", " ", "#1"}], "+", 
                  RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                  RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], 
          Short[#, 7]& ], 
         Complex[-4.714250812077725, -7.181297191842136]},
        "NumericalApproximation"],
       Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 3, 0]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SuperscriptBox[
          InterpretationBox[
           TemplateBox[{"Root", 
             RowBox[{
               InterpretationBox[
                StyleBox[
                 TemplateBox[{"\"-4.71\"", 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                  "RowDefault"], ShowStringCharacters -> 
                 False], \
-4.71425081207772489477747512864880263805`15.84450342472155, Editable -> 
                False], "-", 
               RowBox[{
                 InterpretationBox[
                  StyleBox[
                   TemplateBox[{"\"7.18\"", 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                    "RowDefault"], ShowStringCharacters -> False], 
                  7.18129719184213577420905494363978505135`16.0272936401732, 
                  Editable -> False], " ", "\[ImaginaryI]"}]}], 
             TagBox[
              RowBox[{"Root", "[", 
                RowBox[{
                  RowBox[{
                    RowBox[{"9936", "-", 
                    RowBox[{"1200", " ", "#1"}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    SuperscriptBox["#1", "6"]}], "&"}], ",", "3"}], "]"}], 
              Short[#, 7]& ], 
             Complex[-4.714250812077725, -7.181297191842136]},
            "NumericalApproximation"],
           Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 3, 0]], 
          "2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         RowBox[{
           InterpretationBox[
            StyleBox[
             TemplateBox[{"\"-4.71\"", 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEExpressions", "NumericalApproximationElider"]]}, 
              "RowDefault"], ShowStringCharacters -> 
             False], -4.71425081207772489477747512864880263805`15.\
84450342472155, Editable -> False], "+", 
           RowBox[{
             InterpretationBox[
              StyleBox[
               TemplateBox[{"\"7.18\"", 
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEExpressions", "NumericalApproximationElider"]]}, 
                "RowDefault"], ShowStringCharacters -> False], 
              7.18129719184213577420905494363978505135`16.0272936401732, 
              Editable -> False], " ", "\[ImaginaryI]"}]}], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"9936", "-", 
                  RowBox[{"1200", " ", "#1"}], "+", 
                  RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                  RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], 
          Short[#, 7]& ], 
         Complex[-4.714250812077725, 7.181297191842136]},
        "NumericalApproximation"],
       Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 4, 0]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SuperscriptBox[
          InterpretationBox[
           TemplateBox[{"Root", 
             RowBox[{
               InterpretationBox[
                StyleBox[
                 TemplateBox[{"\"-4.71\"", 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                  "RowDefault"], ShowStringCharacters -> 
                 False], \
-4.71425081207772489477747512864880263805`15.84450342472155, Editable -> 
                False], "+", 
               RowBox[{
                 InterpretationBox[
                  StyleBox[
                   TemplateBox[{"\"7.18\"", 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                    "RowDefault"], ShowStringCharacters -> False], 
                  7.18129719184213577420905494363978505135`16.0272936401732, 
                  Editable -> False], " ", "\[ImaginaryI]"}]}], 
             TagBox[
              RowBox[{"Root", "[", 
                RowBox[{
                  RowBox[{
                    RowBox[{"9936", "-", 
                    RowBox[{"1200", " ", "#1"}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    SuperscriptBox["#1", "6"]}], "&"}], ",", "4"}], "]"}], 
              Short[#, 7]& ], 
             Complex[-4.714250812077725, 7.181297191842136]},
            "NumericalApproximation"],
           Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 4, 0]], 
          "2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         RowBox[{
           InterpretationBox[
            StyleBox[
             TemplateBox[{"\"-1.04\"", 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEExpressions", "NumericalApproximationElider"]]}, 
              "RowDefault"], ShowStringCharacters -> 
             False], -1.03895432155439015886599918303545564413`15.\
712090881738579, Editable -> False], "-", 
           RowBox[{
             InterpretationBox[
              StyleBox[
               TemplateBox[{"\"2.35\"", 
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEExpressions", "NumericalApproximationElider"]]}, 
                "RowDefault"], ShowStringCharacters -> False], 
              2.34854491463639680759456496161874383688`16.066293298103876, 
              Editable -> False], " ", "\[ImaginaryI]"}]}], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"9936", "-", 
                  RowBox[{"1200", " ", "#1"}], "+", 
                  RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                  RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  SuperscriptBox["#1", "6"]}], "&"}], ",", "5"}], "]"}], 
          Short[#, 7]& ], 
         Complex[-1.0389543215543902`, -2.348544914636397]},
        "NumericalApproximation"],
       Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 5, 0]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SuperscriptBox[
          InterpretationBox[
           TemplateBox[{"Root", 
             RowBox[{
               InterpretationBox[
                StyleBox[
                 TemplateBox[{"\"-1.04\"", 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                  "RowDefault"], ShowStringCharacters -> 
                 False], \
-1.03895432155439015886599918303545564413`15.712090881738579, Editable -> 
                False], "-", 
               RowBox[{
                 InterpretationBox[
                  StyleBox[
                   TemplateBox[{"\"2.35\"", 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                    "RowDefault"], ShowStringCharacters -> False], 
                  2.34854491463639680759456496161874383688`16.066293298103876,
                   Editable -> False], " ", "\[ImaginaryI]"}]}], 
             TagBox[
              RowBox[{"Root", "[", 
                RowBox[{
                  RowBox[{
                    RowBox[{"9936", "-", 
                    RowBox[{"1200", " ", "#1"}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    SuperscriptBox["#1", "6"]}], "&"}], ",", "5"}], "]"}], 
              Short[#, 7]& ], 
             Complex[-1.0389543215543902`, -2.348544914636397]},
            "NumericalApproximation"],
           Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 5, 0]], 
          "2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      InterpretationBox[
       TemplateBox[{"Root", 
         RowBox[{
           InterpretationBox[
            StyleBox[
             TemplateBox[{"\"-1.04\"", 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEExpressions", "NumericalApproximationElider"]]}, 
              "RowDefault"], ShowStringCharacters -> 
             False], -1.03895432155439015886599918303545564413`15.\
712090881738579, Editable -> False], "+", 
           RowBox[{
             InterpretationBox[
              StyleBox[
               TemplateBox[{"\"2.35\"", 
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEExpressions", "NumericalApproximationElider"]]}, 
                "RowDefault"], ShowStringCharacters -> False], 
              2.34854491463639680759456496161874383688`16.066293298103876, 
              Editable -> False], " ", "\[ImaginaryI]"}]}], 
         TagBox[
          RowBox[{"Root", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"9936", "-", 
                  RowBox[{"1200", " ", "#1"}], "+", 
                  RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                  RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                  RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                  SuperscriptBox["#1", "6"]}], "&"}], ",", "6"}], "]"}], 
          Short[#, 7]& ], 
         Complex[-1.0389543215543902`, 2.348544914636397]},
        "NumericalApproximation"],
       Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 6, 0]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SuperscriptBox[
          InterpretationBox[
           TemplateBox[{"Root", 
             RowBox[{
               InterpretationBox[
                StyleBox[
                 TemplateBox[{"\"-1.04\"", 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                  "RowDefault"], ShowStringCharacters -> 
                 False], \
-1.03895432155439015886599918303545564413`15.712090881738579, Editable -> 
                False], "+", 
               RowBox[{
                 InterpretationBox[
                  StyleBox[
                   TemplateBox[{"\"2.35\"", 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEExpressions", "NumericalApproximationElider"]]}, 
                    "RowDefault"], ShowStringCharacters -> False], 
                  2.34854491463639680759456496161874383688`16.066293298103876,
                   Editable -> False], " ", "\[ImaginaryI]"}]}], 
             TagBox[
              RowBox[{"Root", "[", 
                RowBox[{
                  RowBox[{
                    RowBox[{"9936", "-", 
                    RowBox[{"1200", " ", "#1"}], "+", 
                    RowBox[{"48", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"700", " ", 
                    SuperscriptBox["#1", "3"]}], "-", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    SuperscriptBox["#1", "6"]}], "&"}], ",", "6"}], "]"}], 
              Short[#, 7]& ], 
             Complex[-1.0389543215543902`, 2.348544914636397]},
            "NumericalApproximation"],
           Root[9936 - 1200 # + 48 #^2 - 700 #^3 - 12 #^4 + #^6& , 6, 0]], 
          "2"]}], ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.837322248147873*^9, 3.8373222927644997`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"dd7785d7-670d-40a4-8eb0-12bf8ece78f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", " ", 
     RowBox[{"6", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.83732236856774*^9, 3.837322378830104*^9}, {
  3.837322410228213*^9, 3.8373225018940716`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"0bd6534a-d0b3-4873-98ea-e09d72d35ffd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rDPkvAn2nW4Lixw2BMUp42H2hFvb/wBY+A2Z
       "]]},
     Annotation[#, "Charting`Private`Tag$48996#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 6 Pi}, {-0.21723353536631326`, 0.4403992863690067}}, {{
     0, 18.84955592153876}, {-0.21723353536631326`, 0.4403992863690067}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8373224723635316`*^9, 3.8373225044209504`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"ec64f02a-de15-4102-882b-7300b7cb6863"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.837322404464675*^9, 
  3.8373224060061197`*^9}},ExpressionUUID->"10d13a82-7844-4f9d-84b7-\
e2fa9adbe1a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "+", " ", 
    RowBox[{"y", "^", "2"}], " ", "-", "1"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8373225327930465`*^9, 3.8373226302615566`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"ca5b4aad-4994-4656-8e09-1ab7d5b5ba64"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXuYjeX6x4UhUsb5PMYYodIRkbLeklM0CVuo1CadVVRSUtLugBRyTkpb
qGbn8LO1qlVrKanoIBENO4eo6GAcouxqfvta7/dzr+u9L+Ofuebjmee9n+9z
ft77ft4mg+/sPbRsmTJlCiqWKVPufz+/HvrAmpKSiil+tpr9xislJWcHPa+6
9FC3qeWNf9W08bT72rcKkt1OyZ2af4Lxjqef9kb5s1oGN9yzdPbKYf9Nwqd1
m5xYuKNZcFk6n8PGvxp95YJrC5oGf0+n/9F4hQ+G3dFyVJPgmjTfarxp/p76
lQflBmXS/1ZfCB947p19SkoaB3eF6WPwfKW/LczfeEXlf0Voj/Etsufm0H7j
M2T/qrC8ATxQeQtCfYxvkT76PfB68ju6oie/8/PKWp9v3D+ihekMf6th0dEH
b843neFVLwj+zKnfxHSGLygqu/a1qo1MZ3j5YR0GdRpSz3SGX5QuVx3TOWpP
bdMZ3lHp0RleQfmjM3yx7EFneDXZj87whMqLzvC+0gedvZ7ojH60T9LB0ZPf
+Zmn9oPO8OJxM4L+jeubzvB799bNXnOspukM35RuV9VMZ3jDe8Yeu6j1KaYz
/NJua9vUTFQxneG5So/O8M3KH53ho2QPOsMPyX50htNf0BmO/ujs9URndKK/
ozOc9snfw9GT3/n53DuDe8wdV8N0hgfSB53hZdLtLct0ht+T1qGM6QxvO/qD
Ge2ySmLoDB+p9OgMz1L+6AzvJnvQGT5P9qMz/LDKi87w6tIHnb2e6IwejJ/o
DKe/ozOc9km+cPTkdxs/0v2rrOkMr5tuh0di6Az/4+uRicfX7IuhM3zWafNe
2b5nt+kML18UpkdneK7yR2d4b9mDznD0R2f4/SovOsMZf9DZ64nOlJv5CJ3h
jJ/oDKe/ozOc9snz4OjJ7/zsf2RCq+GVvzGd4e1m5Z+yZ8+KJDrDN/7jgls+
PLY+ic7w4plhenSGj1L+6AzPlz3oDD9R9qOzzdsqLzrDK0kfdPZ6ojPlY35H
ZzjzETrDGT/RGU5/R2c47RM74OjJ7/y8YH5B0bKOu01n+PO9mv/cv/E+0xl+
jtKjM3yp9EdneG21f3SGj5b96AzPV3nRGX6J9EFnryc6Uw7WS+gMZ35HZzjz
kY2z4oyf6Aynv1u7F6d9Yh8cPfk9+rPYdIZPU3p0hi9X/uhsXPags5VL9qOz
rXdUXnSG95M+6Oz1RGfszXftGd7RtWd4rmvP8JGuPcMZP9EZTn9HZ/g5rj3D
p7n2zM8Wrj3Db3btGZ7j2jN8jGvPlr9rz/BLXXv2eqIzdlV04zO8ghuf4Zvd
+AzPcuMzPNeNz/BRbnyG09/RGb7cjc/wm934zM+5bnyGn+HGZ3gVNz7Dt7rx
GX6SG5+9nujM87e49QZ8sVtvwEe59Qa8m1tvwHu79QY836034Iyf6Axf7tYb
8By33oCf4dYb/Bzg1hvwArfegD/o1hvwQrfe8HqiM8+Z4dbP8Gpu/Qw/5NbP
8Hlu/Qzv5tbP8BPd+hk+2q2f4Ze69TN8jFs/w6u49TO8wK2f+fmSWz/Dj7r1
M7ymWz97PdGZ/AK3H4Qn3H4Qnu/2g/DDbj8Iv9/tB+38wO0HLX+3H7R9sNsP
wlu4/SB8q9sPwh90+0H4Ubcf5Oepbj8If9ftB72e6MzfbXHnG/C+7nwDnnDn
G/Dq7nwDvtidb8ArufMN+CXufAPez51vwC915xvwk9z5BrzQnW/Aa7rzDfi7
7nwjak/mfMPr6c7rglLO64JSzuuCUs7rglLO64JSzuuCUs7rglLO64JSzuuC
Us7rglLO64JSzuuCUs7rglLO67yegddz6qDt1+R3r5Di54BBT149onJGf/jA
j0ZvbvfYWUG3dP67k/DXr9jUf/6yhkHvtJ3rjG9MP7dB8EDIY/BN4r3DfIwv
VT7Twt/Nrmui9gTeHp67Of3/R7XfPxzjufBLxLH/nbR+B5I7NpyT+9SvO2Pk
A++1/oR9R9d/ZPnArxfHfvhPygf7eA76kA7Oc+E8n+eSjp+7X32/MGi9xtLB
H+u+q9eggp32O/8Px37+f6w46ey5i58dWVj15yTlIv1SPZd8SN/TpYePUv7v
heWyfI6ovHDSL1Z5qXfSL5du6El62hX1Cqfe4dhLvaMznHqkX5PPB/nDW5y1
6AfTk/ToRn8nfYuN3Tt89cQv9vekRx/GAf4/ofxJZ/Xj9ITf4/SEx2X/trC8
ln+BygsnfS9xdCb919ITnUlPP7X2Kbto5+hG+lVON9LTftCN9PlON9LTftDN
yut0Iz36WDvUz7F6rrU38bJfhvajA/kVOR3MfrVDayfiRRMfznpv3deZ9iDe
695ZtZ5csytT7+IfKb3pL75C+aMb9h5x4xJ8sRuX4HE3LsEpL/nQLgrcOAmn
naAD9rpxOMPdvABf7uYF+NduXoAXuXkBvsLNC/wcJHssX86HZA/223s0Zyd8
c7VBLWZ+mZvpD+L7/lu2y7g6uWYn/Edx7LT3YsrH2ZPCHtoJ41Pf9DrhkPUj
+lmwv/OUke032b4PXpzbcnOv4vdsP2LzlNLzPMpHuUjHc8if30l/UO2T3/n/
g66d2/+rnaMb6Rk/sdPmO+WDnrY/UHr0hNO/aMfw26PlDXx50QG7qEd0pxzo
jz5wdCZfuC8vnPGfcsFtfFO54IwPlMt0bRI+l34IHyw7Ka8vF+Xl+bRPykU9
0E4oF5x6IV+4n6fgcVdf8I9cfcEfdPXl7bT6Un5bovUYeE474Dm3u/5i644m
0f4Cf9ClR290duNGUMq4EZQybgSljBtBKeNG4Mvrx9W2uwqrTc2vmOLnH7X7
jb/vfuOB52+ny7kz2TH9/LeTf+267pHiEd8l4U+HPPaHOOkuSdu1MXnD1HbT
Zvb5ydLBB4uTnp+19i1o9GOn/fY7f1dDvF/49zH+/1rlAyf91e65/Kzm8v8g
LEfskOwnHfyAuNMtKEU347RD/q5f73PeuHbQ2aYnOvSceOjo3HHfmp7Uf4NL
Nrf6ov8eS4e96Ann5/ILPql86ZC9Zj/pa7jykv953RuuXdfyF0sPP0ccPcm/
UPnDST/6wJJgVPsfTUeeg55ws9eVl/y6iJMOznPh2OvbD+mvdfUOv9qlpz+d
6XSAn+F04OfLsodywTvIfjj5ufZj7YL2gD3o8Zdrh3D6FzrAaT/UB/8/TvWC
faRHZ8oJr6P2Zvsc5TNG+fA749yARjdmvbTsJ3su5aBdwSnHOU5n8jnx3g1P
/zp/vz2XfKgXOH9HvaAz+fwwbNLBY+u/s+dS7tHOfmuPTjd4NacD+Yx0epKe
eqefM+5Sv/xO/cNdemsPzEfMG53v+faiJ9Y0CLCfv+vV55Vunb5tZOvA6HlL
gwC9SB/OO428PfZc/t7qV/mQjnohH9oN6Q9Jf37HXtoJf8//n6R6R094H6W3
eUt6XCYd0JH80QH7mZ+7RNOnbNxyuqET7ZDn8v+DojqYruhAOtoD7dCN/1bv
pI/uOxrYOEB68odTb9uGr+21IyvXzgPJp6fKSznJh/LCyaf/+X8fv6d1buDG
JbMTfekfjCfYj13UI+UnPf2IdkJ/quPmNfgYlz/20h74nfQj3bwDr6L8nZ6p
UvRMeT1pR12Or2eqFD1T6In9lPuQG5fgzO92Lql23tm1W9/OeR78KlePvp/a
+bU45SV/357JH0569EVvdKb9mZ+j66e+31FO/u6y449vAeWFUw7K68Y36y9w
31/Qn3KP3PbTqgcXN7JywUeJW33r70ZGeVAKt32Tyyfw3Pqb9PH90dZTt5Q/
vf8LOcbRed8Zy257qk2O2VGh1yvjh20tK//M6sZ5v/FJ0dCTf51f2+wg/dtK
b+eMSv+p0pOO/MifdHDy319UbfHKYVk2X2x68/S6y96tG5wY5mN2JZUP7xfg
XyifA2E+Vv/rLx0w/u2G9cweW784e+CfOnvQ+RPlgz2kTzl74BucPbSvIpWL
cvIcysvz4DyX3ynXOsfJn3wYTyh37KpOyfvaV7fnvvLlyI5bV5ZLdWtbae15
/WqaPvwd6UlH/qRn/8jfTU+/D6ph7Qx+xrB585/6tbqVi/xiq9p26Lgi81z2
tc8qHzj9/nTlw9/b/kb5YA/1uahCww059etaf+Dvztg8pVGfu2oFOfVe+7Sk
JOMHnlfnzU9SJ7UMhnyydWNJScbffugtN90x/5zTjJN+58A6S+rd1izoVVI3
XlLyp80L0/8cf6xSTnPjpM/e377DuKvygiKd/2Tm+bvOHjcz3zjphyy6eNfh
+Y2DG9LPPWDpu9dpmF15Xp5x0k+oNmt++SUNgvAc4XtLf+ePQ3vsaNbEOOmn
NbxvxXlf1Q22p/lmS19rTmGzm3syH8UT3i/9yzC96dwkrVud4Kswf+O0w7+H
dmbOBWU/nPTjZb/Oxyx9G+kDJ/1g6XN5qLOlnyb94ea3L/0Hh/Vo89UQ1S+c
9NtVv43CdmLpj/Q8svumT1oZj+rQ0toV74En5qzef/kJzaz9wLsPztuw8Pom
1k7gB38an8iZ09DaA7zNyqtaVJ1Ux+odfnXu69/nzKlh9Wt+36dPOnb5qmyr
X/hLr+9d1S7rFKtfeGf5P1C/8AVKT/36/KlH+ADZQ33Bz5X91Av8F5UX/eFd
pQ86w8dLT3TmvfqODqf9un95E9MZflFJ9pIp+Q1NZ/jzzft9OPjPWqaz5VPc
9Lw+xdmmM7zKysO7PzhWyXSG536yvHJ+9/KmM/xY03GbU+vKmM7wdvLnQWef
Hp3hjZU/OsMryx50hn8j+9EZPkflRWd4B+mDzvDt0hOd8VPo8s1Xb15+cY7p
DH9v6LMPlZTUNp3heU9vmbF+S7bpDF/7es+scTMrms7wsyscqthpSEkMneH9
dC6KzvAaqxsUDa+Mf1o8AX9O/mno7NOjM7yP8kdneEvZg87wNbIfneGNVV50
hqekDzrDL5Ge6Izfx8K7qhbsmVbfdIbn/bau+sw+NUxn85O/OK/f+v6VTWf4
hC/fabWsYxnTGb4k/T6r2HSG99a5NDrDx3b9M/epNW8l0Rn+mfwt0dn83pUe
neFdlD86wxfLHnSGPy770RleEoTlRWd4rvRBZ/g/pSc6s64YO2ZL/z1965rO
8Hl97vx8U8VqpjN81DslFfsUZ5nO5vf+QtvkTYVHrR3Cn5PfL/rA62sfhD7w
35ed2L1D1udJ9DF/+x1n9bim4D+mD/yQnos+8OGyE33gA1a+dVv/xtVMBztX
uGnMyPWz6pgO8OUX1fw51SPbdIC/MKV7p5ajytv4Bi9J/9tv5YUfW9nl/jE3
/2jlhb/3Rpu1P3baauWFFz7yULNTJn1h5YLP1nMpF3zYi9eN7zQk28rFOvQR
V7/wa6UD5bL3/K5+zS/+xWj92r7f1S+8mqtf+CZXv/B/uPqFH3X1C7/H1S/8
ale/+HktduMJPN+NJ/BKbjyBP+PGE/gbbjyB3+3GE/hvXaLjCbzQjSfw4i7R
8QR+qxtPzD/cjSfwCW48gZe7ODqewPPceAJ/2Y0nFkfl5kf4Gjc/wk918yN8
g5sf4Re6+RE+xM2P8FZufoT/282PPj06w6938yO8rZsf4Z+6+RGe5+ZH+Ptu
foR3cfMjfoi73HoPHrj1HvxFt96Df+vWe+bn7NZ78OZuvQc/IT+63oN3ces9
nx6d4ae69R4826334Dvdeg/+vFvvwTu69Z7l49Z7+HVOcvsXeA+3f4EfcfsX
eHu3f4Ff5/Yv5ofu9i/wV93+BX6527/AC93+xeePzvBr3f4F3tbtX+AH3f4F
3t3tX+AT3f6Fc6Nm7vwB/q07Z4DXcOcJ5qfvzg3gT7vzAfgsdw4Af+yjb+qP
q1PHdPb+2+gMf1zp0dnnj87wSW6/D7/J7evNL93t3+E73T4d3tTtxzk3/U37
d3fOE3DO485zAs5z3LlNwLmNO58JOJ9BN++PjW7wd1s13XBf91zTDc65jTs/
CTg/ceckAeck7jwk4DzEnXsEnHugDz/DdWCmHRbrfPHRQT/Oe3vuqabPe3NH
jRu2NSv1j8NH835tkjm/0vl86kjRR706ts6cU92Y2+X8rSsrpIrkZ+LaVcq3
q1zZUzl+ce6OZnVNH52npq7T+y/0eV/2jGhYc/i+To1Nn+nOHvTBnmbp+b2Z
6dNO5/EfpOejFqbPlMr3Hus29YRUGO+TGQ9tXZlef+aZPm2evmTJymFlUzeq
PaNPRZ1rfp6eHxtk2k+17Bvyu5dLNbxqx+gzF9W1fvqazi17vvhH52Pra/tx
L1Xgxr1nZeeYoZ8evX1rVdNtqOxsn24n1U23trJzvc6r0e1EZye6FcnOr1WP
6IadxJXQH8dM/0/dqfnlU9VG1R8+YkJGzxN/G1OQ3/2PZNtRY1a83TDP9Cwc
3aPc1Pw/k9OKry1MrWtkevIz3HfUNT0Pj/vu9mFb/0pOSq/rapqesyqsaLJ1
ZUlykNbD6JnzQXBbfvcyqVMV18O4t//xRZ23riyT6vvO3NWVBlXx83iyq5vH
T5L9/RS/hs6vy/4vtP5B596yv/qErdt6F59iOh+R/U/JfnSeLfuJO0Nn7H9h
7+g+VSflms7Fsp9xCZ1/SfeXX5Mjp3xXsn1PZl0avj88ksxLrzfqms7h+6Kj
yeWLKt7yxJrqprOd3xCnLJ0f2tt19LCtvyWPpO2sYDo3GVbr7K0rf0/eXHL3
waKVJ7j+fji51K0/D8jOlV07ttg/4hdbf06TnUXrfnp0Sv7vtv5sJzvPT8/L
5UxP+dHZfQXo+bDsrHpK819fq1rT9MyTndtnHcgbtrW+6bmmeNfublOPJZnH
0fOVdP3+nByo8cfGyXQ9/mL1iJ4N0/VVnIx9eXRhTv2TTc+U/CLPvPix2fV+
LJc5b9TPNTu73rhwx++2br9F5xjL3f5oqewZ22Nj4UONJ9j+6Ijsqbto9NWD
x+ww3XJkT57iMdFNfonJ02UPug2VPVXUbtEtHB8OJgdOmD9kT83Mur0wPQ4c
Sk5W/0W3n9P2fJO8+vC07a89k9mPv4P/2sU/bBs8JrMfD9//7Ep+pn4UXefs
Tj7VdMDJe2r+Yfrczvthtx//Xc+9oHaTWxbt+Nb0Wc1z/7tv9uw+KduPV9Zz
/69mpw/Xttxt+vTScx/Tc9FnZrp9fpcsTO83TzR9/qN+sET9CB3apu18LenP
Wwr0Xu5OnWNE3x+tTmbvOvnndllZ7rwlnvjLnbfMUP4Pyc+B8o5T/t/LP5by
DlT+97z/zCc9V31p5foorc8XyRMUT4r9Gi9jFTQvY39vvd+7Uetq7A/b+Rex
isoHu6/XecVsV1/8PCj/B+zvovwf37bwYP0fvzT731T+TRr88bcXl31l9ncI
yxWrLN2wv2m6v++NLduzc1tR28x5iMatGOMe9j8b1m9sueo3+p5ud2yia4dD
dD6wxvXThnru2LJnt52W/7GVy/qr/L0p12Q99/xZQ2t1m/qDtUO9J42Nde2w
bNhuY5xL0w4Tev+5rsLDtW4uzJwLhfP1odgM9VN0CNcnB2PXqF+jwxDZla1x
IPp+6kCslRvHNO7FmmicQZ8e2tfPd+P/YtkzIfh94uH5e0yX8rLnqWtnVy5/
1v7MubF+vq1xEn3elT2nunGsvuxpq3EYffaH42TsSY3bjGOLw3E11k/jPLqt
DueF2GWaF9AtN5xHYjs1j6Dbg+G8E8vWvINuW6hPN5+2Cee1WBvNa8ynU8J5
MLZB8yB66n1NzL9XWiU7g+KZzc5c9JfpmSM7B2teRscHZOcvmsfRk58Xu/m0
tez8l/oLemJnjtYV6PlzOL/HRmgdgp5adwXna92Cno3CdU7AOgc9Z4Trohjx
4Oh5MFxHxSa6dWCB7D1Z7dbW1eE6LcZ7KNaBFcN1XaxA6zp01vvHoItbb/8s
+wu0bkTnhrI/R+tMdJ4m+zmHR99i2f+EWwfaelDrXnR+VfY/o/6LzhVkf2ut
q9H5wXAdHlTXOhydXw3X7RYPjs5bwnW+xQWgs/wygk/d/qV1uI8I8J9BZ+xd
qnaCztpPBSNrnVu3fVa26dwTvx63H3xA9l+tcQmd5dcRdNX+CJ03y/7a2k+h
c5bs/9jta7D/Ou3XsJufw7S/Q+fJsv857QfRueKCGj91m1oxuG/E751Xtsqc
M+CH9b72lfY+OtyHBnnah6Kz/PuCQ24fnQr3ucGt2uei22bt6/u6c4YKsmfN
p+2Tr13R2HRrjf/m7VvqH1vf2HQbIns2qd7RbYrsOeD20djzsM4B0OsX+T09
rHMDp08KfWgn52vfvVv2wH/Wfv9vGodpPw2V36D0OUbmfOA85bNZ+VBflfXc
+/VceAPl84zOPcj/A63/L9f4GV23/Dd5msZb0u/V/uUp7V/Q/x3lc67yoVya
Z5Mva16Df6d1ezmt28lf83VyjuZH7Omi/dQTmk9J/4L2BbN6h/sC7Pmn8rnL
zbMlV4T2jJQ91Fe9cN2SXKL1Eu1whta9V2p9Aj92Rbh+Xqb1M3y11pPdtU6D
N9D6c4LWn+jAzyASj/Z9coXW7Xdr3U55ta5L9tP6Cn0GaN/0g9Zj5KP1avJ2
rSfhZbVO3qZ1MrpVV/4pt377RH/3ltZv8HOV/1S3Xn1cup0m3eAvS5860of2
2UzPfV36wzdpX9NP+ynGjVvx31T8LPwC8e6OD5a/Yg/Hp4oTn0t9ddK6erLq
C75F6/A+sp96wT8zZ+LkFX2K92b0lz/hV9IZfqPW+YOkG/VIPs0Vz0i9wPOU
P/pvUP7fuv3OONn/gOxnfJPfZrJTNH4/dpp4zHE9V+uiDH9JvLM49TXy7nBf
Vlz3n6unLMi8BymvdXvC9ZcXtf4fpHaCnviX1nN6vqt1flf1CxtPpMcD6kfo
ST5NpSf5t9I+pbbauc2/St/I6fyZntvC7aNrqlzvqlzocFT53aBxm3HmhEfT
7Tl2jdqztR/td6Z/OrmwTJltmfYgXqA4VmsP4nOUnufuDftLrL/yh5+l8i5V
/0I3nefEamschlfRfiShcRI7dS4UO7EgHG+x827tBydr/CH9Uu13lmscxv63
lE9xl+h5TplHQ3vOcPOCzvdiizTv8Nw+2metdfPCx9oXXK35iOceUT7rlQ/1
onP4YKbmR3SQ33HAORhc5+fBd5p/ea7y03sH/JPjiV5a713j1nt5Sn+Hm98P
6bk36LnUIz+nyE437wcPuHmf9yD4c7r3RCneE7n3MuZPG113HU3+zb1/J+75
H/9qve/8rC+tXuBHNV/YOkH8IaVnHMBvZ4r8Q8jf7nVRO0d/0n8pPxOeS/qB
6i/kQ/q68lfBHrv/RPkzL4T5rb5wkMqLnfCP5beDPfCl8vNhnIT3dfngxzJf
5SUf+BKVC/vhVWU/nDjrpU5/+BVNovrDX3XpicvGv8L5Vwe+PfSUni9F7tuM
J0ZoHmG8hZ8rfprj4c+iCznfgw/UOHyqmwfrah01fWvfQUPGZM7T2t6bnncs
TgoeaB6cqvTkP1Z6TnT2X6ZxdYBrPzM0rxEvCe8ve55S/nB+7tP5Hr8v1Prn
rSXzZrfP2mt2JvX/x5QevkbpVyo9+RzS/+9y+b+l9cm/XXqdx8YecPaPlT7j
nT5zpH9jp3+R8l+q/EkfqB8Ndbp9rfVbZ51Lwzl/fnbxgD87tt5h+bOuflWc
9PSjX+VfB9d5e6yDy595+UmX/8maf89Wejjrkxfcc4k/a3n9iD6d/pnZl7HP
2qD9Jnyw3reuGdKl056NDa2/+PhTOPEd/RXHx7jNeDVGfn2kJz6louIKSY8+
U3TeTnriQr6PxJ/GEz6+Ej5DnHkHfUh/lnSA36R99EZXXuJvKstOuMW7qbzR
+aViin29s9Peg8P99xqwx9eXOx9IcT4A5/34F7Lf+S2k8FvgucQncm6P/ozP
D6u+aA/odubx20/g2w/nEh/JHhe3Erwje+A670q9JD8o+DN6P36r3o/DfTwL
5zYd1Q6H6r0G6wT2HVVb1Vyy6cM6xs/WuNd77UfV+yytY+chqt8kcRN2TnJ3
2B7wX0U38q+i/OHfyt5yev8Cf0nj4cfPXNej//aM/fPUL+5y/rGs57Od/Z9p
HPtM+WCn2m0MO+G3qt2iD/aQ/8nO/toab+mP8Cc13vaSbrSryWq3fV2/e1f+
Ho9eM2/I/OEZP8x10idL+sA1/ic/VbngX8ke3sfBNX/Fejt7fDxddH4sn+qp
dSwcP4pLlZ715CL5S3yo81Lrj0pfdUCrN7ptqG58lNpz+5Fn3z//QC3j+GNc
MPPWO/ZsrGH1vkHrlDby96B9Uz7i3ejPcNa9xNvA8VsjPgRO3A3xDHD8NvG/
hxPXgB8tHP9ku0eYuBPlg58iHP9P/Org+CviBwbHv87i66QT/mMWDyaOPxg6
wPEHQAc4cUboACcuBh3g+BUzn1n8gd4LoA8cP23z9xXHrxh94PjBog8cv030
gX8b1SHwOqAb59bEM6IbHH85dIPjJ4lucPxU0Q2OnzC6wYlzQTc4cRnM91F/
ocw8BMfPH53h+L2jMxw/bXSG41eMznD8YNEZXiOqW+B1Q2f2W8SBojMcPx90
hlucoHSGE9eGznDef6EzHD95uwdNPBrnsvpCOPtBdLb9ouIm0BlOHAE6w/F7
R2c4ftroDMevGJ3NvzuqW+B1s+/maN9J/Kx9Z0ccf06LexQn7tK+p4OfjPy0
7Xs64sS12fd0xInDsu/piLPfR2c4+2v7no44+2X7no44cRn2PR1x4gjsezri
+L3b93TE8dO27+mIPx3VLfC6oTP7ZuKO0dPiKbV+QE848ZXoCSceED3tXNnd
KwiPnodw39r3Sc4l0BPOOQN6wolnQU845wPoCSdeAD0tnkDlRU84/tJ2D4U4
5wwWn6x1DuvV6PdH4gnW/+hMeuJ/o98fiSc6u++PkJ641Oh3SeKJdu67JKQn
vjL6vZJ44jn3vRLbZytOMPodk3jiM/cdE9JzTkU9wtn/Uo9wzoWoRzjxR9Hv
m8QThe77JnYurnJFv3sST/zbffeE9MR3RL+HEk90cd9DIT1xDdHvpMQTl7vv
pJD+1Gi9Gyd+n/bAOhFOvcOJ76Z+7bxB9U49wqlf6svWp12jesKJ20I3OHqi
Dxzd0AFOHId9f07r6Gej/cU4/YXyWly1G2fgjd04A+/jxhnzR9M4QHnht7rx
AX69Gx/gp7rxweKB3PgAZ3yw72Tpfct4N3/Bu7n5Cz7AzV/m/+jmL3hLN3/B
idu1716JL3Xzjvmbu3kHnu3mHfi1bt6BT3Lzji8v+nDePNito+Bt3DoKfq5b
R8G/ceso+Bq3joI/7tZR8ENuHQXv69ZRcOJA7fs64hPcOgr+qVtHwXe6dRS8
rVtHwW9y6yivGzrjD1LV7Qvg09y+AP6L2xfA57h9Abyx2xfAiQdHZ/hwty+I
+lNl9gXwe9y+AF7O7QvgeW5fAH/e7QvgB92+AF7d7Qu8bnbvic5dtrt9K3yI
27fCu7p9K7yD27fCU27fCs91+1Y4/mzoHPWbyjad4Ve7fa7547t9Lvx9t8+1
cym3z4V3d/tcuNvvB143dOZcintd0BM+3p2HwLe78xD4Je48BM69BOhpcTOR
8+3VF0bfb9YxPeGcr6In/GV3rgLv4s5V4DvduQp8ojtXgTeNniMZ570qcVOc
wxA/RfyP+cXLX5F4FThxK8RdwHnvTFwBnPgCnZPaeRH+6vh/w5frvT/+0PDp
8qvE39fOo9Su8FuF47+KnyUcf0v8AuH4vxHvxHkLcU/E59h5kfxpD8g/DI6/
q/w/jH8mf+9vtG7I+CGG54H4edu5k/wq8WO28zHiYuTPCn9Rfrn4j8LxI8Xf
EY7fI/FFnHvgb0+cDLyj/LSz9D4MzryGP7qdR8m/d4z8mI3L7xq/YThxVfi5
ZvxeQ79H/DLhTeWfSdwO5wnE7xCXAp8k//yvNV/C8ffGXxlOPeJfC8fPFn9Q
OH6h+Dez78bPGX9WOH65+GvC8SNlHLT9r+qF+Ex7T6Xz7VVu/+i+L2b7OOLm
Ctx+kPgv4prgxDcRzwMnroe4ETjxI8RdwIm/6OH2a8Qd4Dfv97NJt/9iX4xf
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
L3P3h5ufgGsn8IWuncBZh5AP9o5z7dzGDdfOrXxq5+gG515c85/g/MS1f/hk
1/7RaYfr73aft/o79sDnuu9BmN5uXQdnHcK4YfEmbtyA/+bGDTjzDuWCV3Dr
Pfh/ZA/ltXtxNe5RXvgd7nsi8Avd+hw+1q3P4bQHyuvjMigv/HmN2+Y3ybit
dkh54Qvcuh0+xq3b7fsqsh8dmB+edd+dgft9CnyH22fBH3H7LHgLt8+C36t9
Fv0Qfr32s/b+ye1/zX/U5YM+8OZuvwYf69bJ9v7H7ddsPy4d+B39nnX31qJH
dY0/dk+IeLa4xV1LpyyNz+QD36TxzeInxRmfsYP8Rjk94Qs1fmI/3OuPvT/p
HMD88PT85u4eS/i7Wrfz9/C39Vy770X8PvdceNzZaecnSm/fS1U9/y4dsMfi
H7W/wB74Mqcn/Kf9Uf1pL5VdPcJZt/Ncfw8D3Pz/nT3wz2QPv/P8TW4fYedU
0of8+f9Cpz98sdJHv/sZTySP+93PeALdSG/3I7r51/yIZCf28f8rxckX3fw9
jfz/Yb1nt32O/v8ndz+Y7Y/cfWve3zj6fdV4Ypq7f4y/88/l/38X53fa41SX
j3+vavdlibOvJH87z9G6CI69We5eKfIr5+5Tsv2jS2/Pcfd8+vek7nsiSf89
Ef6Octn3C/R39aoUvTlld73g/wGrw1Rl
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJw1mwccVtP/x5/73HPPUxRNJSlpaNo0RNLQ4FfJquxQViGRlYyQGckqlF1k
RjJTKCIUMiOUFUkyMvp/3j7n/3o95/X93HPPPffcM777aXLcyINGlEul0tWh
VMpFe4rWFF2oygtjqfQ/4WtUd4LwocI3CddVw8OF+6nNT8I1s1LpcdGndO8S
1fcoSqXddX218Ci1OVj3t1W5Ttd7qP4a0bNU/7HqBqo0VLlMzwxW/a3qY7Xa
NFLdPNG9dL1SuJXoUI3hELWZJHyu2h8jPF14pO6PUCmr7K3rb0R3ER2vNker
zV3CFwhPVH+7V0ql84QPUv1E1T+jtseqbKkyVvWT1GYPtRkjPEBtrlebMXrv
kcJThB9XOV94X93fS20nCV+gb+kofIPwecJbq68aKhfper3qGwjPFa2iZ7cR
flb4ReFrdf9A9dMyd5/D9Oxmwn2Euwp/Sl/C1UQPV/uWwtuofVW16c0YVP9S
8Hvbqq6Tyo3C56u+lfAFwsOFn1abS1lbPbuT6i8TZtF3Fh4vPFL4G+HGGtt8
0R1ztz9N9fOC++ynZz/U/YdUBqjMCe5nf9U3V/vRwkPV/nvd+07lHF2vU31t
4SdFt1M5VXVHqc2TevZC4f307GzhscLdhB/OXf+l6FWF56+76KO523zFnio8
t/8TjVqXB4S/Fa7HGgv/qzaLRU+mjUobXU/Us2P03pt0PUnlQJW7VYaqBJVL
Mo/zTLXbSv0cL7xGz72ufjsJzxCdruuRuv9F7n3ym/CFoh10f73wsSoThK9U
6azyiu51F31M9B2VvZk70Zp6/ni1PUzjWVC47UzRV1V6cI5E31U5QPhp0WtV
Llb77fVca5Xrhc/RszN0f3jms3ei5uEE1T+osb+v62kq+6r8UfJ7hzI29XOi
6Ey+L3oM9wv/kHsO7hH9QPR+ld4qJbUZLvKI2vype1F194rOVj+b8Y2iM3R9
ltqsFN1fdVVVRpU8nz1Vqqjk6uc+0VVq/7roXSrVM+9X9u25+paJ6Vv4/u56
3wbR/UTvCx7723r2vcLrNkd0vcpM4R9Elxde52eYK9HzM8/7FYXXsyP7Vu+o
yyeJ7qs+f9b9fUQ/03UD1W8hWjv3/AwSriM8THiw8F5pHocmvgP/Gac+x6u+
Y+Z9UFH7wzjLMFLhfuxb4U1l889uov+qHMieFy2rn/Z69iO1LefmMz3L5jXg
a3PzY9pvqflbqXs7CTcT/ZJzK9xc9CuVXYRbQJkP3qvyh657inYW/VNlf/aB
aHX1e5TwQOEtcvPGg4Wv07v6czb1rj3Uz8/CQ5iv3Dz/ALXZXfVraa+ym/BP
9KPSW23uRn6oTR/he5AXwn2F7+VbhI8Vfk74HuHjOb/wDdZXeKnwZqLDVOoL
/8Q+5TwLrxA9Mnrt+qp9L/UzXfgq9XOM8LPCdwvvJzxF+FLhbsJThS8T/kfP
nyL8r2iW+xt7qP594R+Fx4u+p+smnHvmR+/agf0gepDuPYy8U/0g4Sfg/8JT
OavIJcmIAaIPsS9UP1j4SeGp8Grhx4VvZ01zy5pewn/p2RbCm6v/X9iLyEPR
VSpNhbeG3+s7p2p+q4kuYq+o/h/kp65fEt1G9G3kBP2IHg2/Ff5W5R1dby5a
XfRdlWrsH9GlfJtwTdHXy5bzm/TcAcHypabG9YbqdVnKRG/Xva/Z1ypf63p7
0fqin6s0FK4lukJlG+EaaR8yh/VEv1DZVriO6HLOknAoe57RK/5V3+8L1xLm
4z7g7AFFF6sUHCHR1SrNhBsgm1SaI/tYU86k8K6iv6rsKtxSdIPKbsKtRE9R
J2P1kTvpA9anM7KD6N6qmyw8Vvg7lT2F25bdpqvwnqI/q+zDHkeWqbQXbie6
VqWtcFPRH8qWxY1F1yBrhbcT/VGltXCTss81fbZn3VU6Cu8s+rdKJ+FdRM/Q
OC9Tu501znW67qL63UWrqK6XcBfhkWrTDZ6qxflJ122QBaIbVToI7yTaWe1v
Qh4Jj1L7y3W9i/pcgF6VWYa9RD+ij4rWyi0vDlf7i4X3E+4gfGnud3UUPkv4
c+FXhU8rzFtOFf1d1z2E92If5YkHsO+EjxAewD7KzSf6pPHAK86EH6v+M+EF
qj+nMJ85W7R/OsvTVX+E8GvCs4QPFn5B+D7hQ9CZhO8XPlT4JeEHhA8Tnif8
oPDj+r6WKp+UfAZfFp2h+iOFFwo/InyU8CLhRzk7yHjhx4SHCL8q/DB7MDef
7ys8ujDfOwuZXzZ/7STaT23mCk8TXqZ3TlFpp/Keyh0qO6J/qM0zanOX2hwo
PEf4TuHzo/WuZ7SmVxbWmdGdn9czFyddZES0DobuVlX4c9X9jf4m+o3qq6qc
rz63EK3NnlGbz3Rvo9oML8wPthI9SaVRwhei/wq3Zk3V9iiVr0rmpW+IPl62
3s85/Rt5ji4i/Lbuj1JZIfwKa5f/px6UCuZH+Avh18rur43Kl7q+Qc8+jS6r
fThU9E3Vzea9wsuFX4QPMya1/wAZXfjbPxL9orAOs1L0tcK6/UJ4FHuI9RXd
R/024YxrID2FP1Z/9YRXF9ZhvhF9S+Uc4U8L6x/3pfruav+R2m+l9tM0vyM4
+6p/MOlzvGu7inn3+cJ3B+t+7YX/1jMDVd9DtIna3IquzBoW1n0eUNttKz5L
p7N3VF5Rn5upfYOK1+Bk1TWs+OyNKGzL/MKzor1Uv6P6KKv9d4xJz37P3uN7
0EWQaaLNVJqi+6mPt/XsHH3PCcJL2DPwQOH3hZ8XPhXdTvgF5IKeeURlB/aY
6j9U/UuqzwqfhTP13qZ6/xLdbyI6TG3eYa+qzfDc+2Gu8EnBPK15Yd5yDOsu
2k7jfwV5LNxGuL1wB/XZWnhP4fbCbYU7CHdEDxV9i/2vPluovgX8UPUPBdsU
6Jno0ujkXyU9+UTkk2izinXiXdW+ecW6/m7owsypcBfV3Sh8pfp5Vv1dI/yE
6ndQfeNg3ojQux99O/GiD5NedJXop7n1+kxtzlG/f+h674p1P/T249jnwTwQ
W+CQsuu+V7sbg3ngRYXtA/Q9+rosmH/CTz7ObcNeh36h+0PSuvyQWb+tl3nd
3xTdUNjWqa9yrp65pbBNfajoC7ltydF6/82F7emBog9ntoOwP+tmtj2xJZ5T
+8uRWRrLGXyn8Hz4fzB/g1cj/9tm1gGW5tZDzhadpXub0nlh7w8S7l/22fpH
+CSVqao/TXQF+mDwd//GO/XM6cgaxsZZEr5Y9M7cZ/Bz0afQ1TLbg5sK2wuf
i65L54jz1C99D9/SX3SrzDz07bQ/n2XPq661SiuVdxOPegcZousXEq9mr01Q
/elq/7Ku5yW+vQb9IrPedkewzjxM678st951HnaP6vdIMvHSzHrYzqyf7l2l
+jPU56TCPg9sVfb+ncKXIx/V13nwT9GTou30J9Tfw8F2x7mqW5757PdhrKqv
JvqQ+ri+sD07WXRfXc8Qnoj+IjyT/Sg8sbBthW8AmxBZf6r67KI2DwpfrzbX
FbYlbyrsH2HPH602f+X2hTwielFm/oyNeXq03+YFtT0l2h7Hdj852mbHpp+T
md9iK+KXYW8fq/sbcvtmpjFvmXk4Nif25/FpD+yjew9wFpDpure9yixd76/6
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
            "]], Polygon3DBox[CompressedData["
1:eJwtm3fgV+MXx++9z33uh1AZUUh7a2iTUlQyGkplZDVtklGEUvYsm6jMJGTL
3jNkS7IaQpKyih+/96v3/ePpe85znns/n8+9z3PO+7zPqd7wUwaenCVJckFI
klx/d9Y/L6ZJ8pLGLpJ30liZeK625HkxSbpJPkQX/VAkyf4aj8t+m/S0kmy6
ye6yv6xRR/JBmn9V8lqZttBn3Krr60l/XXJLra+rNQul76zxjOYmS99baydL
3ln2l3T9o7I9onGq5g7jO8n+leav0mcv0/3ulK2nxquSr9BcHdmaas0hWnuo
xo6Sl2ruysKjruRmiW1Ldc0tunZzyXvp82rq72ayzdBcrdzPY3PpL5S//1Gt
/4fnpO/SSet/lj5Jej3p3aRfrvvvovs30dxWkl+UPF/XPqRxitbcpXvcIXkr
/e2h9f/p+u+kby9b9/Lzn5P+vMaOksfk/i0/6T7X634jpDeUvlL6tdK/0/Wz
tXYfjRf4LZrrJFsPrRmrtW9I/ke26tJHyj5D9m6a21f6WbJfqrkqst+rz/9R
tms0Gsi+q+zDZL9eY7TkbWVfJtvtGt1l309zE2S7Tfpe0vtIHy99W+nfS35P
c/30e37U/e/V/Sdo7gfJAzX/l/Q/NbbUPQ/nGcv2teav1rVbSl+R+Bnw/I/R
qC99uezTZB8uvYH0FdKnF/6OtaV/k/m7r2Yf69oneKayfavPnCX5Xz5D8qOy
PyN9jMavkh/UWCD5bI2/Jc/SeJy9pvG75H81tpb8tMYOufdULd3ry8x7rb70
xfxe2RtIHqBRVfo5uq6Wfv9e0neQvlb27pK34ztK7iz5ANm76e+XfJfS3lLf
cf/Ez5hnvWv0s+YZ86yb5f4ta7S+i+QW0c+ed8q75cxx9oZrrpq+wxDpNSR/
Lvtlsg/mO0j/TPql0qsUPp+c0wP1fVrpfgfI3kP6TNkie0H25ewX3a+N7IdK
7q/52bKfkHuv/CL9Zuk7RL+vHaRfLH0f2WtK/50zytnW+EryH6WOHflrzqCu
GSR9G63/pLx+S41vePb67L76fsfJ3lz2n2W/UbaK/raU/VaNKrl9Qr3Ma/AV
u2lsJdsvGl0lP677bC95gMaJWnc6ayR/rPnWuv8z0i/TtU2k/6x7Bf2eB2Xf
hu8q+4H6W0X293XtFNn7St9C+iLpU6X3k76l9A+kXyh9ua4fzVnW/fbW9d9L
v4e9r7FCcn++n9Z/qPUXaf26YH8yT/atZauuMVfyTxodJR+b23et1vobtP5n
rR8r/T7Zq+W+/92Sj8NHSN4z92+fqTFM12yr0UbyqnKPbl94/7EPe1bss36T
viSzL3tMa2pI769xQub9/r7kRRoNc5/Z+ppvkfgsH4wPkPyp5i7hXUhvnPoa
zkdrfadDZO8n+yzZb9XonNnnnyb7eskdNbpLPzW3z2slvVNiXzitjC9L9L3a
6/tWjd7fudZM1toasj+MPXG8SPEhkjtpLuNdRe+vf6Wfx/6K/r6Jrj9f+kEa
z0m9R/pmPI/o85JJn1TYBzWRvFti3zRM+iLJCzRXU+sHSH9W+t3SK9K3zb1/
vkjs/3lHvCt8yprgM1grs0/jbG4THa+2LPcXz7Bm5jPFs+UM75g5BnC2t42O
h1XL/bddtD+tXu4/9hB7aUeN9fq8wZrfQ/LU1P6hRrT/3Kbcf8v0tzF7RHNH
69o5sv8ueZrWtqvY5zaVvW1iX8zvI7Y1Ls8IuAB88Df31DVfafSQnmjMkPw1
50ByqnE7su43R+ZrdN0G/IXGfXye9I3l+yT2N9HYTvK9+j7rZL9c17blPGrN
k9Jnan2Q3lP6XOnTpf8tuavGLeAb6b9J3lPjZvCF9PWFY2gzye0Sx9a+0p+S
PEtzue43RH/31GdfQgzVZ07Xmi6Sl0rugH/X+llaf6nW/SF5qP52lf0vzW2t
NRdorsi8R48gdmrcI/kqzf0p+RH9no3Sd9Lajrrf5+wX6b2kt5L+TXBsDxqz
wRi6Zqbsl+j63yX30LhX+tXEVcmb6X5fSz9da3eo+ExwNtjD++veFdm/kjyO
s18xDgGPEDN/0lym0VvrB2jNJM5LbnwEtMO/DtX93pD8kNZU0+Rg6a9Jf0D6
VtJ7S39A+g3S/ye5euF4T9xfIfkwjfdkfzLz51+ozxsova3WfBIcU4gt+IhL
+G7SB2SOOZdK37fw87lRc/9KvlC/5z/pt+ja76XfpLEbe1xzx2v9EOmvS35Q
c1UrjhltJO+eOJYQs9pK75I4ln0VHa8XZo7Ph8j+pvT50qtLv1P64ZLH8Bu1
fj/p8yXfDIiWvY/0hyTeJP0/yfdH7wf2xarCMZXYSow/Gwwg/QnJt2suq/h5
E8vAQGBSfHxr2Ton9v39pC+QPFtzUesLzV3L2dN4Ss/gS33eNMmnac270fhr
TuoYuEry4br+fdmeyrw/8Hn4PnxiH92r0Jql+GJ8Q8X4idhxPBgr2gfiC/GZ
+4Gvpb8r+YnM6/FB+CJ8GLGRGA4WqJc4tn/Me9eoK/2g3D4OXwemIrYOkv6C
5Dmaq1Kxj8ZXb6253sQXMDXxTvYtZB8o/Xnp90rfvGKfh+/DJxKLp2q01/Wf
6ffsVrGPw9fhI4m9vEPe5XayL5dtiX7jValj6tuSp8jeTvqnYJ+KYxaxa6js
F8vWRmOl7Os0juA7EJMlvwvG1vq3dV0j6Ydq/CD5FfyRbA/r+iW6tk/w3mEP
fcF+j/al72h+Gw6d9M/056Tg8/au1lwnfU/pL+hes6Pv/xY4Vfa/cp+vUcHP
42/wIHtd+jtan2r959JPDt7PC9k/0rtIf172/6R/Kv3E4PPyr/RPOBvB5/tl
fKa+7/1gNPKL3P61nexrC/+mO9gb5W9dLf1RsJj0t/AVGjMyzy3luxLjJXeV
/UXOmvQrpHeQ/mzh+18uvT24XfrG3PF2TPD7f0f6dOl7SH9O9g259/fo4P3z
UuFYQEz4WLZXwRzSH5H+Ze5xJ74x2LZAY2LmZ/IS2FRjIbEhOJ6Dl9eU+cQv
xEbZ3yEWyl7IXj0a725evv/78QHBeO8n2eZKHynbmZx/yet1/VuSjwo+z+ty
+5sjg+PPmtz+9fDg/Jr8amPqzxij+/2a2x8fERz/dorOF3cp8VvVwrnoF9J7
y742tz8cFuxv/tL6Jalz8D/Y+5pfL3tnMAs5Ye7zNjTYvz2l+52T+Zm/CB7R
/K+SO2r955J/yH1+hwT7P/A7Z+MEzf1P91+V+7wODvbfK3PjpUHS/5H+Z25/
MjIYf92nuRH6vDM0dz/4Njc+Ozg4vjypcbbs08AQuv/rueN7W9l/KbzH7pJ+
QPDe+zA33thL+rrCe+7KzGvYi5ypKzLvCc7asxoTJTcjLyz8GeQPLYM/e3nu
s3CQ9Nel7x6MBcAEb8v2ZO7v3kjzj8j+OPmVrv9O+kP4fukHSl8mfX7hPT9F
19+a+CywZ9m7PYLxC2f08sxnjLPLnr+MXCzxWSB/OUdyU61/TLbFueNR72C8
gI/B1+wbjFfwwfjij3SPhcSm3PifPVZFc8tyx5v+wXjsu9z4qF8wXvs2N/7q
G4w/ntbf7XTtDRqbyfZANP4DB97NuwrmB1pr7iPwYO74d2AwHso577Kdo/GP
5hblxjfd2GfcX+PczD7wZdlGa3SU/IPmFsl2JDmG9G+lv1u+n6elDwjGg/is
GdL3CfZlYFyw7nda/17he14ovU3wZ/H8eRd7B/sScA34pn5qjMY7vyPzZ/BZ
P+X2LYfK9qZsi/S3mdY21/hA8pka38neQvqHwT5mKs8j2Pc8Rj4v27fS50g/
Q/e+SvbamntOcw9G42dw9D2F4xdYqUYwNrmZc5E4B6ya+4xOkd4q+OySQ5FL
/aj7fiD9o9x4u3swHn4oGm+CO+8t7HPBzvh4fPEojQ6SV2nu/aL0aanzVHzd
w/p7oux1df0DvM/C8bGO9HmF+RC4jqXsD93jVek3af1usq8pHOOBUm9mjv1w
TGC5fzLzIXBMYLe/M/MhPOO5kl9K/Oy7SO6JrPFnZo4L7LQxMz9CDLo/c0wk
Nh0bnLsRU4gtZ2r0lvyX5j4pnJOSG/yeOVcFU5LrrsmMNbk/XNoG6Z9KPyQY
m+Az8Z3whfvqt46TfoHko2V/OLPPX1/iIfAN+At81FpjRckPtJT8oe7ZMPOe
Pin3Gf2nxEOc3ciZwt/rvvvJXz4dzW1coLlLJHeP9gejMz//T6X3S80xfBKN
CZ5mLyTGCuQIEV+SOXcA4+X4sszYb3E0FzBZc59LbivjqhJfwrVcqXGkbFuR
+2n9XZzJzHtihmwHSD6Y2KkRtWaFxsGp9/gLwRgfbFwlGPvvr/WDeN4aeXBO
AB+2eZkrNMm9l+AwGuWOrWfhD6S3wzdpXc3UHOQoMG9h/gkeiniYSF8mvYX0
1ZJXaf3Q1Ge8ZzDGg1/bLBj7PafffDvxTnpzXf98dD7WSXqLijE9ucT/MmN9
OFhy5d8yc7NXST9KelV8H/s5On5eKv0b4kc0dj86M1+UFd4P7Is+FfM5xNLv
U/NZFdl/lNyB51axj701OCfC995NHJW9t8Yxumerwu+L98Z+uQecmHqPDi/3
CHuFPcXZxUeAJcAU+A72YDfJazPvTWLWHcH5KbGMmDYzOL8n1rWPfvdgY/i7
j6K51ukaT8Ktaf2xmWPscZKb5+bDwVdwncSw0zJzcsS2R6WfktlHn0P81Dg9
M2Y8tXCMHpcZMxK720U/L7gv+PV3eL66/9UaD0fzsKvLfAvu+SKNIWwL/YYl
hX3wnGCOHN+MTxuT+Uzh68iZgEZvZc6ldpUyQfI1mrs6Oocml041/4Xs1TT6
En+0ZmlhH35FMKeBb38zmnu+QmM+tYZobpScdLTk3XPnFysT12bw0dODORp8
93saZ6XmFOAWPpK9UeYYdwq+PzeXuEO5Z97QmpNTXw/Xgw9rVeab+LZu0eeJ
cwV2nVA4XyIH5rw8iA8lvpT7E5/ZMnOMwZfiLyan3oML4LI1Lkr8DnmX8H3w
aZyRseX3Yz/zmfCdfOe9JP+a+bfACXaXvk76x4UHfBV8HDYwQO3MmBdsgPOC
6/otMWfIeSZ3q5ArE680TsocI08ujNEoiBGTwW6V3FgGn3k871h6f9l46Yu1
9jzp/aT+J9vnhTFHjTK/BYuE3NzRH4k5I/zvudKvJ1+P5tvIj+sn5hPBINuX
+TLYZGLu/fKv5j6TbQt+r/TFmfna5bpn39QcQMyNK8GXVTXmBXNI4BTwyu1w
mdLfk95U+l3Sm0h/JNj/Xiv9tui1+MDPdL+Z0htIbqgxS3KzinEIeORG6dfD
P6bmiNnvTSuu41HPuwFulZw1mL+7U/qQ6Gvx+c9Kvi6amwQzXiV5UPS1gzSe
ifavQyTX1bhF8gu5YxsYHCx+sUaRes/Dd/Cb+G1wwHk0p39eMGaB678gN9e0
mj1IbNbYIjVG532Du8BfzN0nuZ/s1SXXSv18Guh+DwXPXS79TvBK6jP0uvTH
c8d6fCrxl9/Mb4cDppZwJc8k9ZkgfvaNflfn6Zrnweb48dScDfWyKhpHpMaQ
d0teE12LBEOT/xH/iQVgLPw1NYVNtQU+rzyfy1PHOGId5xmZuVT6v9K/TV1j
IT/bn2eaOCckN7wyOCc8Gn+me72vufGpn/nduWtq+Gp8NrVMYhax667UtY9e
Fcdl4vOG6JyY3HhTvacwJ7WJm+Ke0juDkVI/04vK7/Ou5MUaf0reS+MNyW9y
piWv1XiNZ6+xLjon5/sw92s0PuV5cM36cv3hiWte2KnfUtvjTIKHfo/2jXwm
+TA1n4XBOT7vL4uu9cG5zC6/z/jEGJj7r46uPRJj4I/q6vrFwfWHa/Qcempu
guRqGpcRL4nDqWtC1GuoKROHicdgxx4lRztc+ovl94FnhyOCK+pZ1hCpL+Ib
6hP7g/cYe426PnsdjnXfzBjhiWAfDHY4JhoLg6HB0it0r3ms15o3CtfE4SGJ
j6N4NxrPJM55yH3gPO7KnMPDhQyX/ZXEGBus/Vvu9cfofm+DBQvHQzhm8A4Y
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
            "]], Polygon3DBox[CompressedData["
1:eJwt13ncj1Uax/Hf83uWTGGyDorsa7ZQssuSnfDYl8lSyTYRKiQtlkIzQ2Gy
pEKiHek1RGPJrmgxM0UaqRSqV81Qlnlf3f74Pvd1fc73nPt33/c51zlPmUGj
u45Kp1Kpv1M21c9JpW7KTKWmg0vkC8FRNBWrj7XARssb8TXD/oy9iB3MSqXK
YOfkjak1Nh4rjZ2VN6JW2DisAdZE3znYCuwDrLYxr8SaY+2xx7EBWDtsFvYC
9hlWE8uDNcXaYjOwelgx7IRxF8uX0M3i+tgMvqV8f+PJpk/F9+D7aRxPTSoj
HsbXMSOV+pCnFv0Oa4a1459pvEewBVgXrA/2qLw/tcWewJ7HPuW7ASuCdcZ6
Y/Oxatgv8pp0M3YfVtl98/F1w/pjs7AL9KH4bnwn3cOzHrsXWyV/iUZhfzTe
beK5+q7R9iXPH/B/yUtSRezXuCd95pkqab+ff6h8k3iy9jXyl+lP+g3C+4gX
6btW2ymegVh7bDa2HDuCXcP7jfx6qocNxW7n6833DPYm9h3WGauOraNHsC3x
PbAS8jOU4zdNj9x4X+tXjarSPPlgfBjPavlWfc/r2wy7DqslHoG97loHK4pV
FR8z3sW4J53XrzY15HsgfjP2b3lzcXGsl2trrLy+KzKTdxvvuLN73y5/PuYa
5VyRSm3Ax2uv41qXJvK0oq5883ieovPy4vSFuEJ8Y/4BvMWwY/LyVAMbiF3t
vvtiDog3+82n5WP59hivDLYfS2MF3fuNeJ+0V9tzMaf4DsmL0HXG68pfDrsU
azLmLjYJK4+l9GmJdRI+iFXB8mPdsQHYbKwsdlF+C3XAJmOlsB/kdakJNhIr
iX0vrxPrGhuFjcF2GW83HcYy4vtgP8a8oKZRI7KSOR1zOy9fq5h3PFWpkLw3
31Bt82J9YIWxPtgd2FNYe4pHmYDfR/0lfdynsfhBvqe1HeC5Fj8pr043Yndg
N/H9KL7fdZn8OdqiXynvd7PreN4JVEnfK+QdxT34p/GtpdHiZfHeaThPAePs
53lAfqW2DjwV8Rx5BzwXewxbnJ3UzKid72lbcnmOfyW/hq6lA/IKlBHvRN6Z
f4q+K2kFTY05jD0c6yrqLN/kmGvYfu19sVtiXWGLsI+wnlgDbCI2F9sb7yVq
nTwvlcB6x3zBTkQecxUbgrX1W3rq+yK2GfsGK8F3ONYAFcV6xtrBPpFnxRzE
emQla6FbZrJeYt28Jy/G97E4TYX5cmNeYUfkV8c7wPpih7KTentc/1/ooLy5
/h3jvfGt5zsadQ3/KDYoKuTSPeZk1DV5/nivWB/sTRolXqL/UrrbWFX4fuKp
HPNX2xieN2ikeBHP4qj7fJ1ooPg1vp3afrxcDwZlJmsw1uJueZeoT9ha+R6+
n/l6uUdDbFLUL2xf1HbsjLxczEtsBFYJOy0vG/UTGx5zCDslLxM1MOo+1gNb
HPsL9o5x58ur0s/yKrE2tY3leze+ufeXi53k2yKvQN/JS0c95RsW9QD7NmpG
9Mfuwm7zHEOiPkd9wf4b+zTf5/HNqBTWP/Zz7Li8WDwLNgjL0Pe4+1YXrzbG
aHltqhT7Fd9Mvrdjz8pO9vvY96fHXisfn53Umqg5M7AJ8jHUEmuITcPGypsY
r3U8O/aKtsPGy8Jfd9/C4n1Rt3lWi1+i6uKS2CrXtvq0ocfkp6IUutbAS8X+
h680Ro68Kd2KLcBe5funcYpmJ88e72CStrvkZelLefGo5doGx96jb7WoS9iT
2Jz4PrTX2KW1r9f2l/g+UetpivxkvOf4DvhR14KxV2P9+NPGq+Gan5YbI1Pe
hnrotzLmAd/XsW9h3bHl2EbsRFZSP6OOFsSfjmeMWkp7efKkk/0/j3xEdrJn
x979EN/IOOfgFeMMEN9D21+xucYbIi4QexwN5pmMd8PaRX2J+itfeHnfbRjn
OZrE1zLWiPZlfG/z/wcvwntQXiDWK9YFa8HXme9ZbAP2BXY936/yWtQgajd2
I3YpaqvrUvmz1EFcJb5NOjnHxHmmBnZBfgM1wiZi07C03/cz709R892zYXx3
8ZMxD/jez0r28NjLd8QezN8y9ia+Ma5b08l5Mc6NXahGvDfsUezd+FZZyVnm
HH425nOcDWioeD3fPr7/8SyiZ+IZc5Jz6guxl9FY8bb4Rnw5caajmnHGi/mL
/UOfRnEudo+Z2clcjznfT9wiM6kRUSs+jvNJrENsCjYf247lxjePtYLNxnZh
A/hmYo/TwJi7WHe+urH2+GZhO7F6fDdgD2ELsG3xPbA62FRsIbYj9ml9K2N3
xprBNmJdY25FbYg1jW3F2kR9ivmUTs5UcbZqnJ2s22+Nu0b+MjXHSmMD0kmd
jnrdS/sobDP2SSr12z8qjbHmsc6wVdCh2Aexkdg72MfYpdijeMvFmonnw9ZF
jY31IN/E9xF2MZ4D6xdnYmw7djrmGtYfeyXmB/Z9vCvsTmxD7OXYOayTe8wR
j8Ne0/ZE7G18A8Svxr6o7Qe+btgd2FvYfuwsdkvsP7FnYW9hx7BmWIfYn7B1
2OdYYWN+IP895cM6Y7fy5cY5FtuEfYW1w/pia7Bt2Jm4b3ZyXopz08aoE/Kr
aKf8QsZvx8VUG75C2PsxfpwbsE5Rk7A98sx0ch6Lc1muYLhOG9PJ/yvxf0s/
bBy2AzuK5dEvL+2SX3IPllRbf/Jhu7GMdPL/ZjusoOCA/KoQ1jHOOca713jb
sSPYFTz/B1VRsFA=
            "]], Polygon3DBox[CompressedData["
1:eJwlz7suQwEcx/F/VK02hnaxiLSdRIh6AVYvgKahcbe4FYvLQuKSCOmpugxa
CYs3kPAQHsXmc9Lhm/M93/M7t6HKxux6T0T0ow9JNuI7E3EqnuGHN7WP3oh3
7BkVHUvY5wP4tcsjh2H9z34Mg+4dcb5rkzg2MaXn9Tss6h3tDS94xoJ27doN
Krxuf8mnPXsGV/xAa9k+YMmmoSWo8QmMZ7rfnv7DF7+3H9ULfEfbxie/yHbf
nX7DquttrYM1/qQ9Yo6fp1vM87J7cvwWVeevNm1s6sfapGeXccK3tGUc8oJW
xBFf0f4BoUkssw==
            "]]},
          Annotation[#, "Charting`Private`Tag$50463#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rFPU1EUB+BboFaKBY2bQw1JJ4XC4qaRjYAu1kWLxMStBOuqIUwOGP8A
KQzKQjcDibiIVGtrY1zQImhREePEYEyMiYsGvxeH0+937jv3vtumvddu5Iqx
EMIDNSdE+bqPbxzuCOEwczzOq8yyyDOc5nmW4yGcsmdM/ik35CE17/mEtdfy
qFrW34rOk5/Id+SXnOVblrnLx/zBOheclzH/UG3oZ3lJrbaF8E7/lJtc4xYr
fM9n/MC99hAum2/JGWe+kfPRXdRzM9vWm9Hd1SNVtfbR2hX5hfxJrvEz69yJ
7swvbHA3urt3nDC/or7qSxxXSXdv6v94b43fucIdLnKd97hq7qL5Gfm33JIv
qJv6X/pX8ohaMl+wdlYuyXn5Ls9xiqc5yX6OM82C/Xu8b08Pb3NQHXX3bv0R
ptjDQ0yxi11McsN3GzDfKaedWZWz6qD+mL4i96uE+YS1PjkuH5Db6fUhRqNh
3zPHhb9si353zcnY///dP0taUuQ=
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1095, 1380, 711, 1094, 1662, 1291, 1096, 1663, 1292, 1097, 
        1664, 1293, 1098, 1665, 1294, 1099, 1629, 1666, 1295, 1501, 1855, 
        1381, 1530, 1544, 1556, 1867, 1502, 1382, 1532, 1545, 1863, 1296, 
        1518, 1383, 1555, 1870, 1297, 1100, 1667, 1298, 1101, 1668, 1299, 
        1102, 1669, 1300, 1103, 1670, 1301, 1104, 1817, 1384, 1302, 1385}], 
       Line3DBox[{1106, 1557, 1740, 1105, 724, 1107, 1671, 1303, 1108, 1672, 
        1304, 1109, 1673, 1305, 1110, 1674, 1306, 1111, 1861, 1529, 1558, 
        1860, 1547, 1531, 1559, 1862, 1550, 1549, 1675, 1307, 1112, 1676, 
        1308, 1113, 1677, 1309, 1114, 1678, 1310, 1115, 1679, 1311, 1116, 
        1680, 1312, 1117}], 
       Line3DBox[{1119, 1560, 1741, 1118, 1561, 1742, 1120, 739, 1121, 1681, 
        1313, 1122, 1682, 1314, 1123, 1683, 1315, 1124, 1684, 1562, 1743, 
        1125, 1563, 1744, 1126, 1564, 1745, 1127, 1685, 1316, 1128, 1686, 
        1317, 1129, 1687, 1318, 1130, 1688, 1319, 1131, 1689, 1320, 1132}], 
       Line3DBox[{1134, 1565, 1746, 1133, 1566, 1747, 1135, 1567, 1748, 1136, 
        755, 1137, 1690, 1321, 1138, 1691, 1322, 1139, 1818, 1386, 1387, 1839,
         1140, 1388, 1389, 1819, 1141, 1568, 1749, 1142, 1569, 1750, 1143, 
        1692, 1323, 1144, 1693, 1324, 1145, 1694, 1325, 1146, 1695, 1326, 
        1147}], Line3DBox[{1149, 1570, 1751, 1148, 1571, 1752, 1150, 1572, 
        1753, 1151, 1573, 1754, 1152, 770, 1153, 1820, 1390, 1391, 1154, 1821,
         1392, 1393, 1840, 1155, 1394, 1395, 1841, 1156, 1396, 1397, 1822, 
        1157, 1574, 1755, 1158, 1575, 1756, 1159, 1696, 1327, 1160, 1697, 
        1328, 1161, 1698, 1329, 1162}], 
       Line3DBox[{1176, 1412, 1411, 1825, 1175, 1330, 1699, 1174, 1764, 1579, 
        1173, 1763, 1578, 1172, 1637, 1762, 1408, 1171, 1635, 1761, 1407, 
        1170, 1845, 1406, 1405, 1169, 1844, 1404, 1403, 1824, 1168, 1402, 909,
         1167, 1400, 1760, 1630, 1166, 1759, 1577, 1165, 1758, 1576, 1164, 
        1661, 1757, 1551, 1163, 1823, 1399, 1398, 1446}], 
       Line3DBox[CompressedData["
1:eJwVzr0ug2EYBuCn8bc4AWOPgaK0iN3AETSdLHTrYDRwDiIiTam2qVJ2SyVC
9ACQVLHppit1dbjy3Pfz/bxvMl/Y2k1ExCZH4xHvExE9ugxZm4qYNf/4ZXoy
YsNuTj72fllPySfytnxGQ5/n1C6nn3OpL1Cyy+sVmvodHyxyQNE+4/8v8gNX
tPlkZiyibz7yyhPX3PPFuu/S5iHPvNGhNbqPZ0tmxfn75s3oPnbLZtVux7kX
3OoZ6nZVPSs35D25xoqeMAvU+dZ/WGXAP73ZMgQ=
        "]], 
       Line3DBox[{1199, 1510, 1511, 1509, 1539, 1538, 1864, 1198, 1536, 1772, 
        1657, 1196, 1771, 1581, 1194, 1417, 1770, 1644, 1192, 1638, 1769, 
        1452, 1409, 1190, 1636, 1768, 1451, 1488, 1487, 1189, 1655, 1853, 
        1484, 1450, 1475, 1474, 1188, 1857, 1472, 1473, 1449, 1481, 1014, 
        1187, 1478, 1479, 1448, 1843, 1633, 1185, 1401, 1447, 1842, 1631, 
        1183, 1413, 1767, 1639, 1181, 1766, 1580, 1179, 1656, 1765, 1552, 
        1554, 1553, 1177, 1660, 1868, 1546, 1519, 1521, 1520, 1522}], 
       Line3DBox[{1200, 1513, 1514, 1512, 1542, 1582, 1865, 1541, 1540, 1708, 
        1344, 1201, 1709, 1345, 1202, 1641, 1710, 1346, 1203, 1642, 1711, 
        1461, 1347, 1204, 1643, 1712, 1462, 1489, 1348, 1418, 1826, 1490, 
        1491, 1463, 1492, 1583, 1854, 1517, 1493, 1494, 1464, 1495, 802, 1421,
         1496, 1497, 1465, 1848, 1349, 1205, 1416, 1466, 1849, 1350, 1206, 
        1646, 1713, 1351, 1207, 1714, 1352, 1208, 1659, 1715, 1353, 1543, 
        1866, 1425, 1525, 1526, 1528, 1354, 1527}], 
       Line3DBox[{1210, 1426, 1584, 1830, 1209, 1585, 1773, 1211, 1716, 1355, 
        1212, 1717, 1356, 1213, 1648, 1718, 1357, 1214, 1827, 1419, 1358, 
        1427, 1831, 1420, 1586, 1828, 1428, 1422, 1587, 1829, 1429, 1423, 812,
         1215, 1424, 1719, 1359, 1216, 1720, 1360, 1217, 1721, 1361, 1218, 
        1722, 1362, 1219, 1832, 1430, 1363, 1467}], 
       Line3DBox[{1221, 1588, 1774, 1220, 1589, 1775, 1222, 1590, 1776, 1223, 
        1723, 1364, 1224, 1724, 1365, 1225, 1833, 1431, 1366, 1468, 1850, 
        1432, 1591, 1834, 1469, 1433, 1592, 1835, 1470, 1434, 1593, 1836, 
        1226, 825, 1227, 1725, 1367, 1228, 1726, 1368, 1229, 1727, 1369, 1230,
         1728, 1370, 1231}], 
       Line3DBox[{1233, 1594, 1777, 1232, 1595, 1778, 1234, 1596, 1779, 1235, 
        1597, 1780, 1236, 1729, 1371, 1237, 1730, 1372, 1238, 1837, 1435, 
        1436, 1851, 1239, 1437, 1438, 1838, 1240, 1598, 1781, 1241, 1599, 
        1782, 1242, 840, 1243, 1731, 1373, 1244, 1732, 1374, 1245, 1733, 1375,
         1246}], 
       Line3DBox[{1248, 1600, 1783, 1247, 1601, 1784, 1249, 1602, 1785, 1250, 
        1603, 1786, 1251, 1604, 1787, 1252, 1734, 1376, 1253, 1735, 1605, 
        1788, 1254, 1606, 1789, 1255, 1607, 1790, 1256, 1608, 1791, 1257, 
        1609, 1792, 1258, 856, 1259, 1736, 1377, 1260, 1737, 1378, 1261}], 
       Line3DBox[{1263, 1610, 1793, 1262, 1611, 1794, 1264, 1612, 1795, 1265, 
        1613, 1796, 1266, 1614, 1797, 1267, 864, 1268, 1738, 1615, 1798, 1269,
         1616, 1799, 1270, 1617, 1800, 1271, 1618, 1801, 1272, 1619, 1802, 
        1273, 1620, 1803, 1274, 872, 1275, 1739, 1379, 1276}], 
       Line3DBox[{1290, 1445, 975, 1289, 1816, 1628, 1288, 1815, 1627, 1287, 
        1814, 1626, 1286, 1813, 1625, 1285, 1653, 1812, 1444, 1284, 1652, 
        1811, 1443, 1283, 1859, 1442, 1810, 1651, 1282, 1441, 1809, 1650, 
        1281, 1808, 1624, 1280, 1807, 1623, 1279, 1806, 1622, 1278, 1805, 
        1621, 1277, 1649, 1804, 1439, 1440}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{509, 712, 1662, 510, 724, 534, 1742, 738, 549, 1747, 753, 
        564, 1752, 767, 579, 1757, 1093, 780, 594, 1765, 1064, 791, 1869, 605,
         1072, 799, 1708, 614, 1773, 807, 625, 1775, 818, 640, 1778, 831, 655,
         1784, 845, 670, 1794, 860, 685, 1805, 875, 700}], 
       Line3DBox[{511, 713, 1663, 512, 725, 1671, 535, 739, 550, 1748, 754, 
        565, 1753, 768, 580, 1758, 781, 595, 1766, 792, 1700, 606, 800, 1709, 
        615, 808, 1716, 626, 1776, 819, 641, 1779, 832, 656, 1785, 846, 671, 
        1795, 861, 686, 1806, 876, 701}], 
       Line3DBox[{513, 714, 1664, 514, 726, 1672, 536, 740, 1681, 551, 755, 
        566, 1754, 769, 581, 1759, 782, 596, 1767, 922, 923, 1701, 990, 924, 
        925, 1710, 616, 809, 1717, 627, 820, 1723, 642, 1780, 833, 657, 1786, 
        847, 672, 1796, 862, 687, 1807, 877, 702}], 
       Line3DBox[{515, 715, 1665, 516, 727, 1673, 537, 741, 1682, 552, 756, 
        1690, 567, 770, 582, 1760, 905, 906, 984, 1842, 907, 908, 1702, 991, 
        926, 927, 1711, 994, 940, 941, 1718, 628, 821, 1724, 643, 834, 1729, 
        658, 1787, 848, 673, 1797, 863, 688, 1808, 878, 703}], 
       Line3DBox[{517, 887, 888, 1666, 518, 728, 1674, 538, 742, 1683, 553, 
        757, 1691, 568, 897, 1820, 898, 583, 909, 910, 986, 1843, 913, 914, 
        1703, 992, 929, 930, 1712, 995, 943, 1827, 944, 629, 957, 1833, 958, 
        644, 835, 1730, 659, 849, 1734, 674, 864, 689, 1809, 969, 970, 1001}],
        Line3DBox[{519, 1034, 1035, 1033, 1855, 889, 1063, 1061, 1861, 1062, 
        539, 743, 1684, 554, 893, 1818, 895, 569, 899, 1821, 981, 901, 584, 
        911, 1824, 985, 1026, 1025, 988, 1014, 1015, 928, 1013, 1012, 1852, 
        1028, 1020, 1021, 942, 1019, 1826, 1018, 996, 1029, 1030, 952, 1831, 
        946, 630, 959, 997, 1850, 961, 645, 964, 1837, 966, 660, 850, 1735, 
        675, 865, 1738, 690, 1810, 971, 1057, 1059, 1058, 1060}], 
       Line3DBox[{523, 719, 1667, 524, 732, 1676, 543, 747, 1685, 558, 1750, 
        761, 573, 1755, 774, 588, 1762, 918, 786, 600, 1769, 919, 796, 1847, 
        610, 934, 804, 1849, 620, 949, 813, 1719, 634, 825, 649, 1782, 839, 
        664, 1791, 854, 679, 1801, 869, 694, 1813, 882, 707}], 
       Line3DBox[{525, 720, 1668, 526, 733, 1677, 544, 748, 1686, 559, 762, 
        1692, 574, 1756, 775, 589, 1763, 787, 601, 1770, 935, 936, 1704, 993, 
        937, 938, 1713, 621, 814, 1720, 635, 826, 1725, 650, 840, 665, 1792, 
        855, 680, 1802, 870, 695, 1814, 883, 708}], 
       Line3DBox[{527, 721, 1669, 528, 734, 1678, 545, 749, 1687, 560, 763, 
        1693, 575, 776, 1696, 590, 1764, 788, 602, 1771, 797, 1705, 611, 805, 
        1714, 622, 815, 1721, 636, 827, 1726, 651, 841, 1731, 666, 856, 681, 
        1803, 871, 696, 1815, 884, 709}], 
       Line3DBox[{529, 722, 1670, 530, 735, 1679, 546, 750, 1688, 561, 764, 
        1694, 576, 777, 1697, 591, 789, 1699, 603, 1772, 1067, 1068, 1706, 
        612, 1075, 1076, 1715, 623, 816, 1722, 637, 828, 1727, 652, 842, 1732,
         667, 857, 1736, 682, 872, 697, 1816, 885, 710}], 
       Line3DBox[{531, 891, 1817, 892, 532, 736, 1680, 547, 751, 1689, 562, 
        765, 1695, 577, 778, 1698, 592, 920, 1825, 921, 1038, 1070, 1864, 
        1071, 1069, 939, 1707, 1040, 1078, 1079, 1077, 1866, 950, 1056, 955, 
        1832, 956, 638, 829, 1728, 653, 843, 1733, 668, 858, 1737, 683, 873, 
        1739, 698, 975, 976, 977}], 
       Line3DBox[{699, 874, 968, 1804, 684, 859, 1793, 669, 844, 1783, 654, 
        830, 1777, 639, 817, 1774, 624, 806, 1830, 951, 613, 798, 1865, 1074, 
        1073, 1085, 1084, 604, 1856, 790, 1066, 1065, 1083, 1082, 1868, 593, 
        779, 1823, 904, 578, 766, 1751, 563, 752, 1746, 548, 737, 1741, 533, 
        723, 1740, 508, 711, 886, 978}], Line3DBox[CompressedData["
1:eJwVzz9LQgEYhfE3DXMopITSEEJossGGiFCwopZw0mgW3FxybGuK5pY+QX2B
cGpzaRNaIoh2kf4NBk4R/hwennPOe++FW2x3m+dzEdFAPxHRTUZk5yNWcLQQ
MdB79jan9Hv5VP5LRdzKx/IIVbcnvrbtckkfch8XthJv2h75F8u+P+aOW5Fr
bmu2f/kBP8jo39zyTJ5X9S++wyeW9EPvfchnnsnwhi3wLu+43fCJW5JfsW27
4optghe5bLvkLX2EZ/9W4LfZ/7nVfO8A+0jbBqjb9/RF5JHDOqZuXiZG
        "]], 
       Line3DBox[{705, 880, 1045, 1044, 973, 1811, 692, 867, 1799, 677, 852, 
        1789, 662, 837, 1838, 967, 647, 823, 1835, 999, 962, 632, 811, 1829, 
        954, 1032, 1031, 618, 802, 1023, 947, 1009, 1008, 608, 1858, 794, 
        1007, 932, 1017, 1016, 1853, 598, 784, 1027, 989, 1845, 915, 586, 772,
         983, 1841, 902, 571, 759, 1819, 896, 556, 745, 1744, 541, 730, 1862, 
        1090, 1092, 1091, 521, 1863, 717, 1081, 1051, 1053, 1052, 1054}], 
       Line3DBox[{706, 881, 974, 1812, 693, 868, 1800, 678, 853, 1790, 663, 
        838, 1781, 648, 824, 1836, 963, 633, 812, 948, 619, 1848, 803, 933, 
        609, 1846, 795, 917, 1768, 599, 785, 916, 1761, 587, 773, 1822, 903, 
        572, 760, 1749, 557, 746, 1745, 542, 1675, 731, 1089, 522, 1870, 718, 
        890, 979}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJx1fXVYVlvztondLdgeW1RsRcfujqPY3ZjY3WAhFrZiKxgIYqEjnSqlICXd
YXd8HNfcz+979vV6/tmX+yxmz5o1a2rds5460xaNmFkgX758Q4rky1cw7/kr
PX7Zs1UphOdDmxEJcz49olXOU/ZUv5pEHdYbfj1dPY2MjnVbyeWeUApbJAxZ
mEAxtPi83dN0ahER2c2ttRtNc1tX/N2C19S+cXO/kRszqah7qdsJo9zJs7jB
sL2ZEXSgZBHL5+WzqX/J1bGvp3rQrKJfq46cEEz3njnNt5maQ65e15+W6O5J
VcZ/X9Q32o0sXn8uuL57LvU+nmk18qUnzdlwYL/v4Guua0wWfbfan0s7AkpH
GpTwovpqPGvHL1D0WUvfT/HDNsJPP+FnhuKf2wr/RYT/NDVfjpb5Gst81yj5
cHuRj6HIR+TIWnlCjpAr5Dly4qYxdvNSdE97yw9tpi5yoyoXj9mE90ii9AOZ
8W2HpdG2xQ0ulEp3p6xH5xZ7b4+nRKMPV672y6Dz9rOdZy/xJA64bu9nEk3u
f55Z1HWIeZlTOV40qveSL0apoVQw7aqFfWQ2rfd7cWNQB588+Vn72F7zpFGO
Y+wTf+dQj9FvP4838qV++Ya4FN51w/Vz+qNrM+bm0tlZXb/MW+hLh9V41o4f
p+hzfqG/Tuh7Kn74ifBjKvxkK/45Xvi3E/6rqvlymsx3q8x3lJILjxD5XBP5
iDxZK0/oJfQU+gk5Qq6QZ3KrbwPNRqbonn1Ef1y23DA/dS2RZtSr7tfrcBrV
cD0df/etN3l3ndPqZf04+vzo+uUyaRn0o9H6i1FGftRq3MaiaZ3Cya3lmeLn
imVT5mirj6WrB9CdH3MvLFvlS1lrt+3dfySH7o9KM965J5C+3nvgebX5bddc
a2uDO41zacK+z+bRlZ6SlxrPGTL+rozvoOgzC/10oe+n+OFPws934eee4p+n
C/9Gwn+qmicnyXyxXzKUfLiyyAfyF3myVp7Y59j32O/QS+gp9BNyhFwhz103
C2/q0DhF93znfaWRe6QfWVu5Bp25nUBPSl6a3yQnjSaKfDrbHrKLcYyirn+e
mVRq4oVFbg2DaPXLQiZNXj+lzX+e2WSe7613xIJg2uMdZztrlotr3ymcPPxe
Dp2fP7jP9sxg2qfG8ybN+F6KPncR+iWFvo3ihx8JP+OEn92Kb7YU/nOF/5lq
vuws8zWU+Yp8OEPkA/0XebJWnrCbsKOwn9jn2PfY79BL6Cn0E3KEXCHPyVvu
Dx8YnKx7WnTzH1jzSxCVauxyZXZiHB3qUm694eh0qjvkXs2vTqHUaMnexOAf
IeTReNSLTmuz6NT21AofG7ykr4ZD16f8cnUtwScWfA/JJuPEiJ/DTcKprRrP
bjL+hIwvp+jzAaFfR+hPU3zwROFnmfDjpvjnvcI/5P9FzZe9ZL7fZL4eSj78
SOQD+yPyZK084Sfgl+AvYDdhR2E/sc+x77HfoZfQU+gn5Ai5Qp4jN4e5fcxI
0j19nw/oazE7gjq3OD3HaMoroj/PdGp6dUzlwOMxNDp44NPzDT1dj8avOlzh
QiaV6/6yi0utOBqgxrOpjG8k48cqujxM6HsJfVvFDxcXfmoJP6T45w7Cfwnh
X+bLxjLfNJmvyIdHiHzWinxEnqyVJ/w0/DzsD/wK/BL8C+wm7CjsJ/Y59j32
L/QSegr9hBwhV8jzYsoog4kW8brn6KbR06pMTKLAidvZb9Iz1+g584b3C02i
LhvaHwsbmEY31Di2k/HDZXxPRZ/bCv36Qt9T8cP1hZ+jws8WxT8vF/7nC/8y
X74t870j8/1XyYe3i3y6i3xEnqyVJ+IkxE2Il+DX4efh3+GH4Jfgj2A3YUdh
P7HPse+x36GX0FPoJ+QIuUKe+f78F+aq/3xDSWo8u8v4tjL+pKLPw4R+KaFf
SvHDH4SfJsKP8M9Wwr+d8C/z5c8y37EyX5EP9xb5nBb5iDxZK0/oM+JQrT4j
boI+w6/Dz8O/ww/BL0GfYTdhR2E/sc+x77HfoZfQU+gn5Ai5Qp7XZByeg2R8
N9HnXkK/jtB3F31uKfwcEX5kP7KV8D9P+Jf5sofM11nmK/LhgyKfbhp91soT
9hlxPewJ4k7EoYg/ESchbkK8BL8OPw//Dj8EvwR/BLsJOwr7iX2OfY/9Dr2E
nkI/IUfIFfIcJXTxfCL0D4t9LiP81BR+hH/uJvwX19jn9jJfrX02E/lo7bNW
nsiLkCchP0Icj7ge/hRxJ+JQxJ+IkxA3wV/Dr8PPw7/DD8EvwR/BbsKOwn5i
n2PfY79DL6Gn0E/IEXKFPKcIH3guEX5Y4o39wj/sg8yXfWW+X2W+bhJveIh8
Oot8RJ6slSfyTOSdyDeRFyFPQnyIOB5xPeJ5xJ2IQxF/Ik5C3AT5w6/Dz8O/
ww/BL8EfWenHzwz7iX2OfY/93k0/ftbpJ+QIuUKeEvcznjnCv8yXJV/g6jLf
BImfJb/gsyIfkSdr5Ym8HXk88nfkmcg7ke8gL0KeBPuDOB5xPeJ5xJ2IQxF/
Guvng7r9eFs/H2T498/6+aBOPh76+aDOfmKfa+n76ueDOv100c8HdfKUvJfx
7CnzFfmw5Mu8ReQj8mStPFEHQV0E9RDk7cjjkb8jz0TeCfln6Nc3dPqPOB5x
PezPCP36hs6+IU5C3IR4qbd+fYPh3w/q1zd0/gh2U0sf+xz7Hvsdegk9hX5W
0a9v6OQpdR8eqZGPyJO18tTU6/gv9Tr+S72O/1Kv47/U6/gv9Tr+S72O/1Kv
47/U6/gv9Tr+S72O/1Kv47/U6/gv9TqtPFkrzxYNPXdtX5qie+7IHDzhTo0n
5NVg4grPPqnUr51n/fqnksmknFUXg2JMM+eWGFp0XCC1vm03OtYlh9b3+W1U
r5Q3LVjULsN7pBM1WH7UtN6cXBqycUDfOXu8yUq9Z+37JYoOmwiddUKnpeKD
jf83P6zlZ06Xsj9vtXSjXfOjH7StlEMPNn/NX790GG1W71n7fmbj+PAGB2Jp
07nOxQJWp9PGwH9/5vcJJ3OfGln7Q71pbMd/Gi63zKLENnZXNthF0l71nsfI
+3h5v0TR4Q1CZ73QgVwgJ8gH38P38V18D9/Hd+tPaVnsYmii7jnu0U+/peGx
VPCa98lC/YOo3O/GmTvM06ipyZKkyN8Jun/j/+N9NfVvLiP/v7G8n5nxts1r
i3Ddc18Fx1E3J2ZSE/U9riPfHS3f3arG8VQZv0vGV1Z0+fdV9d1/hP5WNV+e
LPNdK/Mdr+bLc2S+MTJfkRtPE7mtFblBb6Bf0B+sK9Yf64v3WH+8x/phPbGO
lun/Gl94mkib/zxDacCa6lUPV08lyAvyg9xWT80ILDwtxHV6yZpVvrZ9RRMK
rIw/NzebIBfICfKxUfR5rdDvJfQ3yDg8t8n4iiLPSvLd+vJdM5GbpfAfLfzv
VvPlWSKHu/py4A0iBxd5L/Lk+SLPQSJPyBn7FXKGfkPfoefbRW4n1Ly4r8wL
egM9gv6sELltVXLjMSI36A30CPqzT+R2ROh3F/qQC+QE+TSU7+E5VL4r+47n
C/+rhH/IYafMF3KAPYJ9gl3aGHXKPvZpDF2f4ZJv9rgUtp7nU8p9WjyNdSh2
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
lPwadYDeqg7AZ6QOMNS1ZLVsQ3cyuj5lwJaquVzbq1iBLXl5vZLzWVMtfruP
Gs81ZHxdGV9M0Wct/Qj9fF/Hz27J6+tq+H8l+fsSmS/qJ8jTPUU+qMNMlnw8
U+SJfPyGyt9J8ndG/q6p8zDqAJp6DqOeoKnbMOoSmvoMoz4DuWnx2OsMHWNn
DGdO/lGxTsTIPHmOMeq3P8GTVqm6DUvdhm9K3UZTP2HUTzR1Eh0/mnqIjn9N
3UM338HbOva9uiBF9+x0y+tYfkM32rCxd+DjCUk0Z+fqNu175sU3xl1m72zt
Tr2fnK72OiaeBjdoUfClYQbln1JhaLfOHnSmX2jW5tAYqrsrfvry6Exq/3H0
oLb1PenLo6WBzcqE0wnzGjM2zsgm8xYhhcqGe2r1iqBXb2a/Tox64cYDXdt2
uFc7lxK7DSu0/L4PNexSKyCudDB/P2f3ccTwHFqyvdlLo6veNHVBzHiPThG8
I6vN3Gt1sqmY1+z3ZaZ7kUdmu+01DGPZpPu7KnH+mdTxyMXhx395kI39l/O5
a+K5asaDVvtmZlB4/KuwQafcqenGPnuSVifykRsXHN4WSieXYyfIa7AbBfWz
acX908hi5qOeIXl5X/dl9uHD8/TNaOwNq31mKbpnsFNFp9wfHvSxrbntrqRE
+l34Tr8569Los51ZtSmL8vzXqTHjOoXHUWSzjsVmnciggLf/rn7o502NzQPM
F02IpB5Hyn7ZtCuLClT7+j4xyYdGOXfufahgCLm53gm8WCmHEn1KNGtq+3/7
EXUbM7F75t1Of7va1ovf7bZOue2ZQ3SqRe0qpQPpjPP0zi2SQ/lSv6bH6FY2
fbvZ5b71An/a3yvm16A8/2rZ5Eu9+k2yaHa15YvaWfnSYqflqau/xnF/p9qf
7lpmUGzriosnWHvT5wLZh9/NSeTc5wnbC6SnUdj69uk+NzzJwat23XP/JrNz
Ur1/EyalkuG7A48cPrvT1Uru7Wxep/CyyNyFQ94nU05i/KFlC91o1zWPyOSO
GZSentSu+/l4ulH7QcGmxT2p9MuOc19sS6P801YfGxOcSP/2WTBy4Bsvendv
T52KnVJ0z/s2pad2yctTVjXY1Ny+ZSKtL9/h+ATPNDKrUdbaxsCfanYbkZh7
NJa2/upuXKRzJrnd9lszJDyAmoT+Oyrc5AWFDZ6ekzw4m4y7fF7xuOpTGmh+
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
EEYc4qfiFspWcQsjbqmq4hzKUXEOI85preIi2qviIkZcdEvFUXRHxVGMOKq+
+C3RX4b/GqbiNKql4jSuJXHaUxXX0UgV13GyxHWom6HOgHucuqq4kSVuZDuJ
GxuqOJMlzuTWEmfWUHEpS1zKXhKXShzLEsfyRIljJd5lPB9I3FtKxckscTKP
lThZ4mqWuJoRV19TcTgtVXE4Z0scfl3F7eSk4nZG3P5VxfmUreJ8fiFx/jKV
F1BflRfwa8kLjqg8gnaoPILnSB4h9lTnD+EHvwbOnpBs4UW7F49vMdsth+OP
FV4WUiVQVzdDnQF4g939b6T3NnLnsYtGutcpl8s+rms21PbypWEqP2LJjzhF
8qNGKp/iniqf4sKSTw1X+RdL/sXPJP/6oPI1/qXyNf4m+ZqhyusYz1DJ7yQf
ZMkHuYfkg4NG7gmeWTOZ7F42aZfslMrDgo70/FY5z9+qvJIOq7yS70peeUjl
oVRZ5aGMPNRX5a3USuWt3Eny1lkqz6XtKs/l4pLnAqeBOoOl1BlGzJoWYR/A
HNZzX8PMwbk8Om5ZacfuXlQx4u6wBnuec5MNS2a+2ZfD5/OHuX9t9N89Zn/y
dJY8nZdInn5a5fVcR+X13FHyeqkDsNQBuJDUATaqugFL3YAHSt1AIx8aLvKp
pvgh4YfshJ8WKt+nb5LvW0i+f/5Wn2YPs93oik3IRudauVT3TfA8d1cfqqw/
L7ogdAaq7/I5+e5Q+e4QVe/gQVL3MJW6h42ynyT2k7aK/cwn9raP5IOXxN7a
qvyFykr+4iL5i5XY4VtCx0ro2Ci/RueVXyN78WvbVdxOtSVubyVxu7/yjyT+
kaqIf8wv/hT3QrUWf8oqL6Bykhf0l7zAS/zsNKFTS+gcED9rJ/w4CT9OEi/1
UPESTZF4SeITSlbxCa2W+MRZxc9UVOLnUhI/f1dxGrGK0+iTxGkbVPxJtyT+
vCjxp8RDumcg4iIVt9MLidvfS9yeqeIrmqXiK/rRWcVXBSQes5W8qbLEYxJP
UmsVT9IjiSfvqjiZykqc3Ezi5BSJ36YJ/VISvxWWuO3HB8VnuPBZSuLVakLf
XeivkrguXOS2UeT2Q+LYwyKfryIfiVd5gEb+kk9xkiafkn5aspD+2vvSP4v3
ZvL+nub9Uum7vafpW9+jeY/1eq7Wiy/Ien2V9Y2VOPyD8B+2JH9icMUEmnnx
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
FvH7G6dTj3z3rtypH0wp+wMse5qHU8vK7jevtsiiZUUuPYltH0rVBeddXdOX
NKKlkfu4O2ncPrdH7NmBifTo8exbXez9KLlX4K/KlhlcPuHkoyXf4shzw4i1
VtbetP1Kk3PH/DO52fmPnWsYxdL5GVeq3/nlocM3o0/HVeQQN2flKp/GWbx1
zZOy9wOjqGalc/vnWflSi0tz766qk825m8f6XOscQbnrxhibTPfS4XSjNH0r
qGv/SUc2nTU9rfn9SpWn2JmaaX6/Ur0/qct39PPBK6bo/0JfE/qc0N+Efh70
96CvB30jf95v8jbF/Srou8gn52nIH9FvkE/oGGt+pxK4gIua36nE+4ma36lU
dC6ZntX8TiXO63BOd9PpxKUHnjmUdLze7optvXihtWfVfKUDafuq914j6uRQ
o5Obloxu48/f5x1ya1kzmND/hn449MGhvwv9XsAXoa8JfU7ob9pzu+J8607p
vGh71RkDjcO56fwbl+xCXtMPpyWeW3dn8Y3U7Be9agVztcO9a+8cFq7DA6Fv
AP0CkZFjIz/b57DXuJDby5fm5V+dCxvRzqf0rzpXYzd1zsb5XqjzNeCMca6I
88QjVwxOFDqeRe7HEr0C8iz23Y2tbBbZPCeDAtPWX+IMetG7RfC+0THMy4zK
PR0ZSuhbQx8b+tfQr4X+LeDcZn16d+X5gnQuNs65iW21OD7ysNQtY/cXZH82
63eZz5mc0DCoUuChVzzsfT9fQ+dgutNlVN1fg7P5wuPHdcqYvOBZptdDNlZ7
Sj/rzF/hXCmHR+wp7VC+YAi3Ov0gbqetrw7PBNw08NKPFsxyPT84jSrN8LiX
r1ieH/g9a+nhyCBa+zol1W5uEnlujD7TelsKT7r9paht0TBCXxn6zNBfZh5c
5Gdbo3SuOq3w4dbFEzj2cqfq4zcG0eeRv06U6ZzJTyNd3j85GsuP695NPRoe
QMeHnPvXalcWJx2aEEETIrlGypDvlZJ96Lz3yfrbZmTzr/fflpYpE85+EVk3
GoR7kkvtgskmZRLIbGWXrl1L5cU7TWr0eu8RRFNXj9qy9n4EFV4UFLL7ayav
alN8WG5ICM3tW2/DRM80brHqpuOVlok8d3bIYDsDfypR88rQOScy+NX6u8Pa
hufla93XWAX6eZPZndglK6MzucyIGStXhcbw2Yi4V/QfPnyI+8OGlV7SQftT
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
CJwj5wjx6tyB1qlzBzaScwfcf1dXc49QnNSjcB8V7gEoJHWndZL/npT810vq
S1IH44WSL+9U5yPUUJ2P8Dk5H0lV5ylURp2nsIecp4xW5y/URp2/sKucv+D+
uKqa+3kS1fkOy/kOL5fznUrqPIjlPIhxHmSszo+osDo/4vVyfjRBnTdRU3Xe
xAZy3rRDnU/ROXU+xbZyPtVDnWdRFXWexTjPwnnPNc39Nk/Vfqe2ar9zB9nv
Kco+sNgHriH2IVedr3Erdb7Gu+R8Tc7jWM7j+JOcxxmo8zs+pc7veIqc37VT
5300T533cYSc911U54OUT50PMs4HW6rzRBqgzhP5qpwnRqrzR6qlzh8Z548f
1XkllVTnldxBzit/eOVrdn1Bnly7v256NjWHhx1ru+X06QAa3aTljwqPL/D2
cVkHPrTO5b2PXiXbpwfgnJTlnJTPyznpHXWuyofUuSq/kXNVOYdlOYflonIO
K+e2LOe27Cnntr/V+S9tU+e//FXOf7uo82Lqpc6LGefFDdT5Mtmo82XG+fLv
pn/Oo6mHOo/mdnIe3Vqdg7Ocg3MxOQefpc7NOVGdmzPOzUeoc3aWc3YuIufs
ci7PldW5PONcPkOdj9NIOR8Pk/NxOWehEuqchQ7IOct3da5ELupciSrKuVIJ
vfO+B6a4n2SvOp+iNep8iurJ+ZStHv7TwxT3dRSRuiHuM8A9BjZyzmUhdAyF
zlw5DyoqfFoLnz/l/Ou28FlW+MT9LLj3ZZvUM/vonWPeNsV9L7r7XOS8DPe6
fBM5CH2uKfQtZb7L5TzORPhE3z76+NG/X0rvvPKKKfr30Z+Pfn306evHk6dM
0Uc/XX+9+JjIQdvXj375d7Lugotg4CIua/r3a0u99K6mTx/vvwi+YpiGzov/
v/68ydsU/dEv9O/9I/Tt3pDz07fq/JQs5PxU3nOuvF8s7/Vxs3amo+XcVs5h
OVHOYRfIeOBCfki8nSr+9ILgJAQ3Qb8FL+FYYXid0rZJ5P/+4I0LZfL8xpZP
TWtNdSfrFhdb5x+TQJOav27w3i2d6rY6uSnKwYPad1/fzqXDa/rRsVv9Rovz
9Nrr9PA5Hz3JzryiS72HEfQxbUoL659ZdK+d/fuI+t602b1G19DBwfRt7Y2E
cT1zyHeDy/nvFXzo3rVWn/uHR/DVz05lf3zOouZNfEZZGeblF+N2PJ014DXb
u5udOzA/k7oNSLaLzsyzG7bP6zuMT+Cci10qFeN0epv8q1nnCx5kdjok7PXR
JPZv+mHowtJpZFQotHeymTu1r3bj2ObGSWRindL7n25pZGdqseCfW17U/Hmj
XnYz42lY+cmv37fNoEV1HL96LfahqssyzSu/iaK5P4KjnatmUYFLj12r1/aj
o42uVrZxDqUG//K8gS7Z9N7n5qhlNv5kp7l/GPiT1N72n61bRnPVvl+dRhXP
ojNhH55k5vOj8m0mm9qsiOcpxX4ajGyWQclt3GaMHOlDw0Lm3UpvkcSPLpou
NzZNo0aLv+U/b+tFZdbNDkkyS2Eb41YD+41Loc2Gj+YlpnvQiJhKLj1Kp3H5
lx9cyx9Loq0Wgbv/m2/5KrUv39iWSHcKLuvjvjaNUlvGlvx3rj+NNj6dtiH7
NW24fN3+s3cGFTMLXPw8PpAco361fZLxklZYHt5R91UWLbk4yOe14XMKuFjE
oVNLXwq8OSWwyZgcMuldv8uE8UFUR3PfL/xy0QE+17/bJnLyoYn27xankcXi
SgV21fenWhWuxc/tnMKdboc6tTJNoZtR0dkvvX3oe7XIMg6d03hO6U4td7RM
ok5dNpn/N9+QVht2BD3Os3ubPs77Pj6B/DoU9f9vfYNdog4dtkigrtvadJz/
JI3ehr57fi8kiMau2NbrQrMomvqp9sikhZlkWW7Mh6nnQnT3D+I+wmES59RZ
vT5m5OI09p01JMbtaCIFO56wtczj89jddc9eNs3gDh+Pzx+4Mp76d/yn5H/r
MqWV44Nx8zO5QcWS15sMfE13H7SrEJOnh1pcyiORw7fjr3aWLJ4XPz3Y53iz
VTQV2VSkQnreuptvnGUQ9jmLxzZ5n1QoIoK635l1yNLQ+6+4lPPS35Vf6g/A
c9bW1M+191So9y6m2nsq1Hs3U+09FaADXK58V4f/L6r5PRrk9cA9XhLcnhp/
2vSi1M3KPaxzISM4h2zf9Sw386EnR38rNP7dxgDaUKRupVVDc8hltUGdiEhf
to4OOLtxVBCNPhl8I2ZtNm2oWX7G4dCnHJow7+6btFAqZ9RxePNPmXTVY6ul
394QflHzu8X5HxF04PCNQgO3phFbB7tdGR3Bq9f0HxB7OA50eIvQCRM6kzyL
dhg7Joddwr3KRTTz5ZZLBu8YmKfPZRWffFz4jBE+axxuZ9bXI4ty2n78dmxO
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
3Q==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {-1., 16.999994857143225`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.837322632011775*^9},
 CellLabel->"Out[52]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
dyENi/9rjeZXu63zgK+w4aY1za/Q8Yx3R5rxRpidE225pPGuImC7jRZDh8/i
RosX29hLv5iqDp9rDY5PD7VbVI/ReBdBtWe8xxqJu46N99CSft94Xx4Ltce8
9HtWttN5S67x9pNsSeN942Ab95GZJFvceK9KGm/qI0s13n407tGY8b5sr+kl
jfcdyyJUn7eQowe3LKlWZy3/ljpea3VC9WLfS1+32yTq4d/5O/2mj0yMt5dl
49NuzdRvz0tn411pvfT5m1aoDSdPjg8vC6lEt8IPq/mJ8KBkJqzSw7I20jSH
moZiANMmH05FdCYXju8E010JTLMIz5AIhznVV2CsNHxro7g1qMsB6CwhWKuF
x/sYpl9SuP1L8xgQvf6iWQE9L+vgeuj4OXQZXIcRriupLo8c7NVzyFpTMl3j
eviGflhsjsJlnc6DDpNCH4fB/qbTdCCjszWuYayNKAeuU/Lno1vsR5FHEYt9
a1tpUe7hutE51Wj8FrtwQaMqnK+t/ikoAxw+Gjf5ugO61LX6Om2vPnXqXn2h
Wrtnn743zlFq+rsdv2sOW9vhu/P04u2w1Ty1fMGAWq5BvHpXznQitH7OXuDT
6/ZrDeapuw9uVHfp66kj6lPNNFXRHFWrnj+yuJl+zDHTZy5sjvJm1kxPKGmm
d9tqpjbTTVRFAzBfvrSjWO5MK/FqddGu3EclaPZyZoLmRt/1JjSLjQaaqcpu
/mYVBsHB/xnCWYIw4CsQdr1pGW+T8KYhZLW5upHjUPgKfzp0a1k8N1qi4cM3
Y6LO5547/Qa5018gOK5RWwG0Emr1d3The0qD30I9AF92kdHOOFDmipk+/Dtj
MuWxwhgA2s2bkVrXDjYiaVGFXEVcfWssd5homhTrV6caairWP1KK9TWatfzm
lNksz8t2DPUYwVzEUCfAXNxQ88GI7UUNdeGyJpU/sxWF+vojDu3Tr5fPnoTn
dBENLdb3TqM5+KF66MiceuCInLpfX/cdnlMvHt+srljeRXb6o7UN6sNTGtT7
J0+3dvqtE6erN380XeVPmKYeOaJR3XRAm7pRX4iloVb/HA3tY3fpVcfs3Est
kku3HsDZiPQW8BUNRKft3qFO1RfOSESd/mh2mmCt7fRDGtqopd2wdLKTMUuB
tWOn1+zURNC+ZUkNZczI0dbQjtnpkHLiGUL2lu2ZwSBS32nIborUtznALPgm
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
nxps8v8B6oUTaw==\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"18d6bf3f-614b-4bd6-862c-075b1a545c69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"\[ImaginaryI]", "*", "2", "*", "x"}], "]"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "*", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8373227155676947`*^9, 3.837322742435939*^9}, {
   3.8373227814058995`*^9, 3.837322937624134*^9}, {3.8373230044814515`*^9, 
   3.8373230054300423`*^9}, 3.837323066137623*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"4cbdb34b-0608-4abf-94c5-7903a6113961"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrWcv9ur///f7GcDggn1Q+9nVxvEIfvn5ltz0fe/2
/weD8/ZXrnC/Opj4Fi4veyBfxFzmDVx+a/YRVv67r+DyCT2GH242vYTL/5hU
3bHf/gVcfjHfPckZD5/B+XO8DIsudz6F85tyEis0PZ/A+dXMq8qL3j6C8xMb
zqtcW/EQzp+69+mMOVkP4Pxd9zV41ijdg/OVBRycQubdhvM3aXVkPXp8A86/
f3SjgpnZNTj/qc5Uo/3bLsP5gnUrzfQYL8L5OmbvdZZ+PgPnN7u8vbCz4vj+
f1D/ioasmxApfghh37ej/CdUdsH5S28/7X3Zsg7Ojw2U2XI7eQo8vHZyVV89
VDrZHsY3fcQo1xixHs5X/rD7p9WhnfYw/Z6Lb571izgE57v6CjF/3Xoczu+P
v95gsP2MPSOUf9xPljdA6CJc/q2iaN2lWZfh/NIS7cR+sWtw/vU7AkFpJ27A
+QmVNs/ZfW7D+Ye1zbsOs96D89U497xY4vEAzpfdk+3K2vEQzmf4xbSy6NEj
uH++B+6NO6r6BC5/2yReWrXlKZxfEC4gqHTnGZwvOeVJBIvsCzh/XfSC5Z8r
XsL54bb1Hif2voLzN8blKln9eQ3n/+ByZt4Z+hbOD7pobSY74x2c78ChOYHP
5z2cD80vcD4ARHFBqg==
       "]]},
     Annotation[#, "Charting`Private`Tag$54014#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{2.887755, 1.5}, {6.010977, 0.5}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1.0416666666666667`, 
   1.0416666666666667`}, {-0.027777777777777787`, 0.5277777777777779}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.837323069137488*^9, 
  3.837323102148117*^9}},ExpressionUUID->"db3f70f7-78d4-405a-94c1-\
a49ff07da9c6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8373230624447165`*^9, 
  3.8373230830609584`*^9}},ExpressionUUID->"51c65635-571c-4eb1-857b-\
38920f92574c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Fit"}]], "Input",
 CellChangeTimes->{{3.8373232868506145`*^9, 3.837323287894084*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"6509e105-7ea7-4fba-9005-e3f33d736b79"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Fit",
              ButtonNote->"paclet:ref/Fit"],
             "\"paclet:ref/Fit\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) finds a fit \
\\!\\(\\*RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[InvisibleTimes]\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"+\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"+\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"\[InvisibleTimes]\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"n\\\", \\\"TI\\\"]]}]}]\\) to a list of \
\\!\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) for functions\\!\\(\\*RowBox[{\
\\\" \\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\
\\\"n\\\", \\\"TI\\\"]]}]}]\\) of variables \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) finds a fit \
vector \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) that minimizes \
\\!\\(\\*RowBox[{\\\"||\\\", RowBox[{RowBox[{\\\"m\\\", \\\".\\\", \
\\\"a\\\"}], \\\"-\\\", \\\"v\\\"}], \\\"||\\\"}]\\) for a design matrix \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Fit\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
specifies what fit property \\!\\(\\*StyleBox[\\\"prop\\\", \\\"TI\\\"]\\) \
should be returned.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Fit", 
                    "paclet:ref/Fit", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/Fit.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Fit.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FitRegularization", "\[Rule]", "None"}], ",", 
                    RowBox[{"NormFunction", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Fit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Fit",
              ButtonNote->"paclet:ref/Fit"],
             "\"paclet:ref/Fit\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) finds a fit \
\\!\\(\\*RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[InvisibleTimes]\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"+\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"+\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"\[InvisibleTimes]\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"n\\\", \\\"TI\\\"]]}]}]\\) to a list of \
\\!\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) for functions\\!\\(\\*RowBox[{\
\\\" \\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\
\\\"n\\\", \\\"TI\\\"]]}]}]\\) of variables \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) finds a fit \
vector \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) that minimizes \
\\!\\(\\*RowBox[{\\\"||\\\", RowBox[{RowBox[{\\\"m\\\", \\\".\\\", \
\\\"a\\\"}], \\\"-\\\", \\\"v\\\"}], \\\"||\\\"}]\\) for a design matrix \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Fit\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
specifies what fit property \\!\\(\\*StyleBox[\\\"prop\\\", \\\"TI\\\"]\\) \
should be returned.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Fit\", \"[\", RowBox[{StyleBox[\"data\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \
\"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
finds a fit \!\(\*RowBox[{RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \"\[InvisibleTimes]\", SubscriptBox[StyleBox[\"f\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]}], \"+\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \"+\", RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"n\", \
\"TI\"]], \"\[InvisibleTimes]\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"n\", \"TI\"]]}]}]\) to a list of \!\(\*StyleBox[\"data\", \
\"TI\"]\) for functions\!\(\*RowBox[{\" \", RowBox[{SubscriptBox[StyleBox[\"f\
\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"n\", \
\"TI\"]]}]}]\) of variables \!\(\*RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\
\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}]\). \n\!\(\*RowBox[{\"Fit\", \"[\", RowBox[{\"{\", \
RowBox[{StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"v\", \"TI\"]}], \"}\"}], \
\"]\"}]\) finds a fit vector \!\(\*StyleBox[\"a\", \"TI\"]\) that minimizes \
\!\(\*RowBox[{\"||\", RowBox[{RowBox[{\"m\", \".\", \"a\"}], \"-\", \"v\"}], \
\"||\"}]\) for a design matrix \!\(\*StyleBox[\"m\", \"TI\"]\).\n\
\!\(\*RowBox[{\"Fit\", \"[\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \
\",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"prop\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) specifies what fit property \
\!\(\*StyleBox[\"prop\", \"TI\"]\) should be returned.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Fit", "Web" -> 
      "http://reference.wolfram.com/language/ref/Fit.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     FitRegularization -> None, NormFunction -> Automatic, WorkingPrecision -> 
      Automatic}, "Attributes" -> {Protected}, "FullName" -> "System`Fit"], 
   False]]], "Output",
 CellChangeTimes->{3.8373232888761797`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"ca353e60-7c7b-4383-8b8a-ed0726b95934"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Fit"}]], "Input",
 CellChangeTimes->{{3.837323292639886*^9, 3.837323293824875*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"4f720662-afb6-45fa-853c-76721f6e190b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Fit",
              ButtonNote->"paclet:ref/Fit"],
             "\"paclet:ref/Fit\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) finds a fit \
\\!\\(\\*RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[InvisibleTimes]\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"+\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"+\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"\[InvisibleTimes]\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"n\\\", \\\"TI\\\"]]}]}]\\) to a list of \
\\!\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) for functions\\!\\(\\*RowBox[{\
\\\" \\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\
\\\"n\\\", \\\"TI\\\"]]}]}]\\) of variables \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) finds a fit \
vector \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) that minimizes \
\\!\\(\\*RowBox[{\\\"||\\\", RowBox[{RowBox[{\\\"m\\\", \\\".\\\", \
\\\"a\\\"}], \\\"-\\\", \\\"v\\\"}], \\\"||\\\"}]\\) for a design matrix \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Fit\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
specifies what fit property \\!\\(\\*StyleBox[\\\"prop\\\", \\\"TI\\\"]\\) \
should be returned.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Fit", 
                    "paclet:ref/Fit", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/Fit.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Fit.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FitRegularization", "\[Rule]", "None"}], ",", 
                    RowBox[{"NormFunction", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Fit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Fit",
              ButtonNote->"paclet:ref/Fit"],
             "\"paclet:ref/Fit\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) finds a fit \
\\!\\(\\*RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[InvisibleTimes]\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"+\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"+\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]], \\\"\[InvisibleTimes]\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"n\\\", \\\"TI\\\"]]}]}]\\) to a list of \
\\!\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\"]\\) for functions\\!\\(\\*RowBox[{\
\\\" \\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\
\\\"n\\\", \\\"TI\\\"]]}]}]\\) of variables \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Fit\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) finds a fit \
vector \\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) that minimizes \
\\!\\(\\*RowBox[{\\\"||\\\", RowBox[{RowBox[{\\\"m\\\", \\\".\\\", \
\\\"a\\\"}], \\\"-\\\", \\\"v\\\"}], \\\"||\\\"}]\\) for a design matrix \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Fit\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
specifies what fit property \\!\\(\\*StyleBox[\\\"prop\\\", \\\"TI\\\"]\\) \
should be returned.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Fit\", \"[\", RowBox[{StyleBox[\"data\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \
\"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
finds a fit \!\(\*RowBox[{RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \"\[InvisibleTimes]\", SubscriptBox[StyleBox[\"f\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]}], \"+\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \"+\", RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"n\", \
\"TI\"]], \"\[InvisibleTimes]\", SubscriptBox[StyleBox[\"f\", \"TI\"], \
StyleBox[\"n\", \"TI\"]]}]}]\) to a list of \!\(\*StyleBox[\"data\", \
\"TI\"]\) for functions\!\(\*RowBox[{\" \", RowBox[{SubscriptBox[StyleBox[\"f\
\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"n\", \
\"TI\"]]}]}]\) of variables \!\(\*RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\
\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}]\). \n\!\(\*RowBox[{\"Fit\", \"[\", RowBox[{\"{\", \
RowBox[{StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"v\", \"TI\"]}], \"}\"}], \
\"]\"}]\) finds a fit vector \!\(\*StyleBox[\"a\", \"TI\"]\) that minimizes \
\!\(\*RowBox[{\"||\", RowBox[{RowBox[{\"m\", \".\", \"a\"}], \"-\", \"v\"}], \
\"||\"}]\) for a design matrix \!\(\*StyleBox[\"m\", \"TI\"]\).\n\
\!\(\*RowBox[{\"Fit\", \"[\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \
\",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"prop\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) specifies what fit property \
\!\(\*StyleBox[\"prop\", \"TI\"]\) should be returned.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Fit", "Web" -> 
      "http://reference.wolfram.com/language/ref/Fit.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     FitRegularization -> None, NormFunction -> Automatic, WorkingPrecision -> 
      Automatic}, "Attributes" -> {Protected}, "FullName" -> "System`Fit"], 
   True]]], "Output",
 CellChangeTimes->{3.837323295437275*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"24ea1009-535d-4f8c-8e83-6622695a7808"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"26f7a541-9af5-4384-a244-8e909760f5a5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 213, 3, 30, "Input",ExpressionUUID->"3b96a4d2-bfb3-4d3b-9a14-5b243e025c54"],
Cell[796, 27, 188, 3, 34, "Output",ExpressionUUID->"0c69a83a-1018-47b1-9b96-2069f48bbee8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021, 35, 388, 9, 29, "Input",ExpressionUUID->"9005f533-da3d-4544-a98f-548020699bb7"],
Cell[1412, 46, 20767, 360, 231, "Output",ExpressionUUID->"c2b8f06b-ab63-4b96-906e-98f79a95bb28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22216, 411, 279, 6, 29, "Input",ExpressionUUID->"5c7ae0bc-4841-4b57-b2f7-ef14e1e1f362"],
Cell[22498, 419, 230, 4, 34, "Output",ExpressionUUID->"6449d0a9-9052-4f3b-82c5-99968ee2155b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22765, 428, 222, 4, 98, "Title",ExpressionUUID->"e32fb987-72c9-45ee-9abc-c2fe9b3818c4"],
Cell[22990, 434, 170, 3, 35, "Text",ExpressionUUID->"af953c3e-1afb-482d-b59c-0227fb6db3b4"],
Cell[CellGroupData[{
Cell[23185, 441, 541, 13, 29, "Input",ExpressionUUID->"1cc14499-1859-471e-ae64-02960876f165"],
Cell[23729, 456, 434, 12, 37, "Output",ExpressionUUID->"57c88fe7-1c70-47f3-895c-5540a8438b74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24200, 473, 245, 5, 29, "Input",ExpressionUUID->"b2237f84-96d0-4e54-900e-11ed2e44951c"],
Cell[24448, 480, 407, 12, 37, "Output",ExpressionUUID->"065cfcdd-1336-4fcf-bc23-4367a807b8c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24892, 497, 212, 3, 29, "Input",ExpressionUUID->"8a1d10fb-8f60-4cc7-bd80-0482a224a28f"],
Cell[25107, 502, 407, 11, 34, "Output",ExpressionUUID->"435bfceb-4c85-49d4-80be-bf4c718422e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25551, 518, 218, 3, 29, "Input",ExpressionUUID->"6f09c761-5047-4168-b162-655a2f74be13"],
Cell[25772, 523, 185, 3, 33, "Output",ExpressionUUID->"22c1ed0d-05e3-4276-a49e-2e17ce449d2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25994, 531, 284, 5, 29, "Input",ExpressionUUID->"21407356-d0f4-49d3-a1a2-badea53736a9"],
Cell[26281, 538, 395, 5, 54, "Output",ExpressionUUID->"d64ec7da-561f-4b56-8900-dbf9d7952041"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26713, 548, 243, 4, 29, "Input",ExpressionUUID->"f922e6da-8bc4-4bef-97f3-ab1d18cfbbe2"],
Cell[26959, 554, 375, 5, 54, "Output",ExpressionUUID->"8c1c3204-0019-468c-a9bc-ac0686c6cb91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27371, 564, 261, 5, 29, "Input",ExpressionUUID->"dde98b32-6d46-483b-bc87-8e9404346a3c"],
Cell[27635, 571, 374, 5, 54, "Output",ExpressionUUID->"fcfffdfd-7fb1-4156-a6a0-8fed26d93992"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28046, 581, 214, 3, 29, "Input",ExpressionUUID->"b13310be-6929-4bc1-8183-6dae34db532c"],
Cell[28263, 586, 155, 2, 33, "Output",ExpressionUUID->"ded444af-9495-401a-a891-5dbd08a4842d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28455, 593, 211, 3, 29, "Input",ExpressionUUID->"074e3c62-843d-444c-8dff-5fbd6fe633cb"],
Cell[28669, 598, 151, 2, 33, "Output",ExpressionUUID->"519fb34d-98d4-4ea2-a263-1d9e480b6b35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28857, 605, 210, 3, 29, "Input",ExpressionUUID->"d48f6c7e-3af5-4b74-9b50-d4cf5d93bf2e"],
Cell[29070, 610, 153, 2, 33, "Output",ExpressionUUID->"411c358d-d246-4651-bc8f-094f30e1e02c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29260, 617, 455, 12, 29, "Input",ExpressionUUID->"76d8e272-9b64-4414-b4c7-eb390a056c97"],
Cell[29718, 631, 156, 2, 33, "Output",ExpressionUUID->"3ce5c4e6-6edf-4550-aafc-66fc5b3e82a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29911, 638, 280, 6, 29, "Input",ExpressionUUID->"83b27775-6d08-4206-b751-b66de7a0735c"],
Cell[30194, 646, 225, 5, 33, "Output",ExpressionUUID->"91b465ae-c446-4631-a097-756d2c21375a"]
}, Open  ]],
Cell[30434, 654, 384, 10, 29, "Input",ExpressionUUID->"d75723b2-62de-4279-bcca-c5d0a85bf40c"],
Cell[30821, 666, 294, 9, 30, InheritFromParent,ExpressionUUID->"3df010b7-f0d6-42a4-8a08-6bf9d3c1e9ec"],
Cell[CellGroupData[{
Cell[31140, 679, 485, 13, 29, "Input",ExpressionUUID->"4b7f3073-894b-47cc-8c78-1c6e95eaaff2"],
Cell[31628, 694, 622, 18, 37, "Output",ExpressionUUID->"f964f8b1-477b-4cc0-a47f-2c6e4b9ee4f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32287, 717, 495, 12, 29, "Input",ExpressionUUID->"f4523aff-2e09-433f-a2e1-e51dfaeb79ef"],
Cell[32785, 731, 219, 4, 33, "Output",ExpressionUUID->"3ded9d9c-896e-45d9-9fa0-43fa5463aa20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33041, 740, 256, 5, 29, "Input",ExpressionUUID->"d542087b-3998-44ee-989c-2eba57aa5b6a"],
Cell[33300, 747, 180, 3, 33, "Output",ExpressionUUID->"42ae8d0f-e8ca-4eda-bff9-0f592784e81d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33517, 755, 432, 10, 29, "Input",ExpressionUUID->"64e0eeb9-1540-4440-ab3e-261ff4f58d99"],
Cell[33952, 767, 484, 13, 53, "Output",ExpressionUUID->"6f2a308a-eb5b-41cb-bd99-5cfdc791aae4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34473, 785, 611, 16, 29, "Input",ExpressionUUID->"26f6cc72-b47b-42a5-92b6-3ce85d4af6be"],
Cell[35087, 803, 192, 2, 33, "Output",ExpressionUUID->"f16a74d2-9e93-4c25-8b24-25a9a39da124"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35316, 810, 287, 7, 29, "Input",ExpressionUUID->"88b0d7b5-4c72-4ce3-b068-b18137962cbf"],
Cell[35606, 819, 166, 2, 33, "Output",ExpressionUUID->"adb87339-cc82-402c-8ca5-64dee89bdff2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35809, 826, 591, 13, 29, "Input",ExpressionUUID->"5b3fd0a6-994e-4c5d-bb73-60a223d4a9e5"],
Cell[36403, 841, 655, 14, 28, "Message",ExpressionUUID->"c20843e3-438c-4bc8-8b94-fcde164313eb"],
Cell[37061, 857, 427, 11, 35, "Output",ExpressionUUID->"c9e60141-c235-42bb-8d46-44e60f0c1d8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37525, 873, 442, 11, 29, "Input",ExpressionUUID->"f5c8b286-5046-4397-ad1f-24648feec1d8"],
Cell[37970, 886, 204, 4, 34, "Output",ExpressionUUID->"8a80c595-f07b-47e2-b9b7-cb131d58bb19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38211, 895, 712, 16, 29, "Input",ExpressionUUID->"6edeb7dd-1a7f-4aae-9abc-13b321bcfe56"],
Cell[38926, 913, 2496, 74, 59, "Output",ExpressionUUID->"0d797a9a-f104-4812-9d30-92398a739999"]
}, Open  ]],
Cell[41437, 990, 156, 3, 29, "Input",ExpressionUUID->"ef7ca194-edfa-4d18-885c-75d5e94df1c9"],
Cell[CellGroupData[{
Cell[41618, 997, 1180, 30, 70, "Input",ExpressionUUID->"913abb38-ef7e-450c-a4d4-286f5b377bfe"],
Cell[42801, 1029, 581, 12, 28, "Message",ExpressionUUID->"d0a479f5-5be8-4e31-a535-b527f784be04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43419, 1046, 658, 18, 50, "Input",ExpressionUUID->"95240714-857b-4faa-a4b6-d435205fa02d"],
Cell[44080, 1066, 545, 11, 28, "Message",ExpressionUUID->"fcc3c85b-d479-460a-9627-b26f2c639353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44662, 1082, 323, 8, 29, "Input",ExpressionUUID->"a6c44ca1-1a5c-469e-871c-a332ec7725ba"],
Cell[44988, 1092, 602, 19, 37, "Output",ExpressionUUID->"13ad4340-ef63-412e-9594-c9539e86647d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45627, 1116, 661, 17, 29, "Input",ExpressionUUID->"e5805bcf-4869-42bd-8814-1a17442b4a0c"],
Cell[46291, 1135, 20346, 488, 126, "Output",ExpressionUUID->"dd7785d7-670d-40a4-8eb0-12bf8ece78f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66674, 1628, 427, 10, 29, "Input",ExpressionUUID->"0bd6534a-d0b3-4873-98ea-e09d72d35ffd"],
Cell[67104, 1640, 18140, 316, 231, "Output",ExpressionUUID->"ec64f02a-de15-4102-882b-7300b7cb6863"]
}, Open  ]],
Cell[85259, 1959, 154, 3, 29, "Input",ExpressionUUID->"10d13a82-7844-4f9d-84b7-e2fa9adbe1a2"],
Cell[CellGroupData[{
Cell[85438, 1966, 510, 13, 29, "Input",ExpressionUUID->"ca5b4aad-4994-4656-8e09-1ab7d5b5ba64"],
Cell[85951, 1981, 154504, 2531, 298, 80838, 1322, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"18d6bf3f-614b-4bd6-862c-075b1a545c69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240492, 4517, 807, 21, 70, "Input",ExpressionUUID->"4cbdb34b-0608-4abf-94c5-7903a6113961"],
Cell[241302, 4540, 2504, 59, 243, "Output",ExpressionUUID->"db3f70f7-78d4-405a-94c1-a49ff07da9c6"]
}, Open  ]],
Cell[243821, 4602, 156, 3, 29, InheritFromParent,ExpressionUUID->"51c65635-571c-4eb1-857b-38920f92574c"],
Cell[CellGroupData[{
Cell[244002, 4609, 193, 3, 29, "Input",ExpressionUUID->"6509e105-7ea7-4fba-9005-e3f33d736b79"],
Cell[244198, 4614, 19068, 395, 202, "Output",ExpressionUUID->"ca353e60-7c7b-4383-8b8a-ed0726b95934"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263303, 5014, 192, 3, 29, "Input",ExpressionUUID->"4f720662-afb6-45fa-853c-76721f6e190b"],
Cell[263498, 5019, 19064, 395, 327, "Output",ExpressionUUID->"24ea1009-535d-4f8c-8e83-6622695a7808"]
}, Open  ]]
}, Open  ]]
}
]
*)

